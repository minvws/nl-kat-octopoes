<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.9.13 on darwin)" generated="20221213 14:11:00.509" rpa="false" schemaversion="3">
<suite id="s1" name="Robot" source="/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/robot">
<suite id="s1-s1" name="01 Scan Profiles" source="/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/robot/01_scan_profiles.robot">
<test id="s1-s1-t1" name="Inheritance Of Two Declared Scan Profiles" line="13">
<kw name="Setup Test" type="SETUP">
<kw name="Start Monitoring" library="CeleryMonitor">
<arg>${QUEUE_URI}</arg>
<msg timestamp="20221213 14:11:00.849" level="INFO">Started monitoring</msg>
<status status="PASS" starttime="20221213 14:11:00.846" endtime="20221213 14:11:00.849"/>
</kw>
<kw name="Insert Normalizer Output" library="robot">
<kw name="Insert Origin" library="robot">
<arg>tests/fixtures/normalizer_output.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${norm_output_json}</var>
<arg>${origin_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20221213 14:11:00.851" level="INFO" html="true">Getting file '&lt;a href="file:///Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json"&gt;/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json&lt;/a&gt;'.</msg>
<msg timestamp="20221213 14:11:00.851" level="INFO">${norm_output_json} = {
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",...</msg>
<status status="PASS" starttime="20221213 14:11:00.850" endtime="20221213 14:11:00.851"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/observations</arg>
<arg>${norm_output_json}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.039" level="INFO">POST Request : url=http://localhost:29000/_dev/observations 
 path_url=/_dev/observations 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '759'} 
 body={
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",
      "fqdn": "Hostname|internet|example.com."
    },
    {
      "object_type": "ResolvedHostname",
      "hostname": "Hostname|internet|example.com",
      "address": "IPAddressV4|internet|1.1.1.1"
    },
    {
      "object_type": "IPAddressV4",
      "network": "Network|internet",
      "address": "1.1.1.1"
    },
    {
        "object_type": "IPPort",
        "address": "IPAddressV4|internet|1.1.1.1",
        "protocol": "tcp",
        "port": 80,
        "state": "open"
    }
  ],
  "valid_time": "2019-01-01T00:00:00+00:00",
  "task_id": "1234"
} 
 </msg>
<msg timestamp="20221213 14:11:01.039" level="INFO">POST Response : url=http://localhost:29000/_dev/observations 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:00 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:01.039" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:00.851" endtime="20221213 14:11:01.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.040" endtime="20221213 14:11:01.041"/>
</kw>
<status status="PASS" starttime="20221213 14:11:00.850" endtime="20221213 14:11:01.041"/>
</kw>
<status status="PASS" starttime="20221213 14:11:00.850" endtime="20221213 14:11:01.041"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.042" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:01.042" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.042" endtime="20221213 14:11:01.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.042" endtime="20221213 14:11:01.043"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.042" endtime="20221213 14:11:01.043"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.041" endtime="20221213 14:11:01.043"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.044" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:01.044" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.043" endtime="20221213 14:11:01.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.044" endtime="20221213 14:11:01.044"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.043" endtime="20221213 14:11:01.044"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.043" endtime="20221213 14:11:01.044"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.045" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:01.045" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.045" endtime="20221213 14:11:01.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.045" endtime="20221213 14:11:01.045"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.045" endtime="20221213 14:11:01.046"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.044" endtime="20221213 14:11:01.046"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.041" endtime="20221213 14:11:01.046"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.051" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.052" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:00 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:00.958-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:01.052" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.046" endtime="20221213 14:11:01.052"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.046" endtime="20221213 14:11:01.052"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.041" endtime="20221213 14:11:01.052"/>
</kw>
<status status="PASS" starttime="20221213 14:11:00.846" endtime="20221213 14:11:01.052"/>
</kw>
<kw name="Declare Scan Profile">
<arg>${REF_HOSTNAME}</arg>
<arg>${4}</arg>
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.054" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.053" endtime="20221213 14:11:01.054"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:01.054" endtime="20221213 14:11:01.054"/>
</return>
<msg timestamp="20221213 14:11:01.054" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.053" endtime="20221213 14:11:01.054"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>reference=${reference}</arg>
<arg>level=${scan_level}</arg>
<arg>scan_profile_type=declared</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.055" level="INFO">${data} = {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}</msg>
<status status="PASS" starttime="20221213 14:11:01.054" endtime="20221213 14:11:01.055"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20221213 14:11:01.103" level="INFO">PUT Request : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json'} 
 body=b'{"reference": "Hostname|internet|example.com", "level": 4, "scan_profile_type": "declared"}' 
 </msg>
<msg timestamp="20221213 14:11:01.103" level="INFO">PUT Response : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:00 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:01.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.055" endtime="20221213 14:11:01.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.104" endtime="20221213 14:11:01.105"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.052" endtime="20221213 14:11:01.106"/>
</kw>
<kw name="Declare Scan Profile">
<arg>${REF_IPADDR}</arg>
<arg>${2}</arg>
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.108" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.107" endtime="20221213 14:11:01.108"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:01.108" endtime="20221213 14:11:01.108"/>
</return>
<msg timestamp="20221213 14:11:01.108" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.107" endtime="20221213 14:11:01.108"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>reference=${reference}</arg>
<arg>level=${scan_level}</arg>
<arg>scan_profile_type=declared</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.109" level="INFO">${data} = {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}</msg>
<status status="PASS" starttime="20221213 14:11:01.108" endtime="20221213 14:11:01.109"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20221213 14:11:01.149" level="INFO">PUT Request : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json'} 
 body=b'{"reference": "IPAddressV4|internet|1.1.1.1", "level": 2, "scan_profile_type": "declared"}' 
 </msg>
<msg timestamp="20221213 14:11:01.149" level="INFO">PUT Response : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:00 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:01.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.109" endtime="20221213 14:11:01.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.149" endtime="20221213 14:11:01.151"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.106" endtime="20221213 14:11:01.151"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.153" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:01.153" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.153" endtime="20221213 14:11:01.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.153" endtime="20221213 14:11:01.154"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.153" endtime="20221213 14:11:01.154"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.152" endtime="20221213 14:11:01.154"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.156" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:01.156" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.155" endtime="20221213 14:11:01.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.156" endtime="20221213 14:11:01.156"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.155" endtime="20221213 14:11:01.156"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.155" endtime="20221213 14:11:01.156"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.158" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:01.158" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.157" endtime="20221213 14:11:01.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.158" endtime="20221213 14:11:01.158"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.157" endtime="20221213 14:11:01.158"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.157" endtime="20221213 14:11:01.158"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.152" endtime="20221213 14:11:01.158"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.166" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.166" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:01 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:01.143-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:01.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.159" endtime="20221213 14:11:01.167"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.158" endtime="20221213 14:11:01.167"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.151" endtime="20221213 14:11:01.167"/>
</kw>
<kw name="Recalculate Scan Profiles">
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.168" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.168" endtime="20221213 14:11:01.168"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:01.168" endtime="20221213 14:11:01.169"/>
</return>
<msg timestamp="20221213 14:11:01.169" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.168" endtime="20221213 14:11:01.169"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles/recalculate</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.328" level="INFO">GET Request : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.328" level="INFO">GET Response : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:00 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:01.329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.169" endtime="20221213 14:11:01.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.329" endtime="20221213 14:11:01.330"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.331" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:01.331" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.331" endtime="20221213 14:11:01.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.332" endtime="20221213 14:11:01.332"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.331" endtime="20221213 14:11:01.332"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.330" endtime="20221213 14:11:01.332"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.333" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:01.333" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.333" endtime="20221213 14:11:01.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.333" endtime="20221213 14:11:01.334"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.332" endtime="20221213 14:11:01.334"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.332" endtime="20221213 14:11:01.334"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.335" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:01.335" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.334" endtime="20221213 14:11:01.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.335" endtime="20221213 14:11:01.335"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.334" endtime="20221213 14:11:01.335"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.334" endtime="20221213 14:11:01.335"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.330" endtime="20221213 14:11:01.335"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.342" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.342" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:01 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:01.322-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:01.342" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.336" endtime="20221213 14:11:01.342"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.335" endtime="20221213 14:11:01.342"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.330" endtime="20221213 14:11:01.343"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.167" endtime="20221213 14:11:01.343"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_HOSTNAME}</arg>
<arg>${4}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.378" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 path_url=/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.378" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:00 GMT', 'server': 'uvicorn', 'content-length': '280', 'content-type': 'application/json'} 
 body={"object_type":"Hostname","scan_profile":{"reference":"Hostname|internet|example.com","level":4,"scan_profile_type":"declared"},"primary_key":"Hostname|internet|example.com","network":"Network|internet","name":"example.com","fqdn":"Hostname|internet|example.com.","dns_zone":null} 
 </msg>
<msg timestamp="20221213 14:11:01.378" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.344" endtime="20221213 14:11:01.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.378" endtime="20221213 14:11:01.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.379" endtime="20221213 14:11:01.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:01.382" level="INFO">${response_data} = {'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}, 'primary_key': 'Hostname|internet|example.com', 'network': 'Net...</msg>
<status status="PASS" starttime="20221213 14:11:01.381" endtime="20221213 14:11:01.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.382" endtime="20221213 14:11:01.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:01.383" endtime="20221213 14:11:01.384"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.343" endtime="20221213 14:11:01.385"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_IPADDR}</arg>
<arg>${2}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.422" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 path_url=/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.422" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'uvicorn', 'content-length': '224', 'content-type': 'application/json'} 
 body={"object_type":"IPAddressV4","scan_profile":{"reference":"IPAddressV4|internet|1.1.1.1","level":2,"scan_profile_type":"declared"},"primary_key":"IPAddressV4|internet|1.1.1.1","address":"1.1.1.1","network":"Network|internet"} 
 </msg>
<msg timestamp="20221213 14:11:01.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.386" endtime="20221213 14:11:01.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.422" endtime="20221213 14:11:01.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.424" endtime="20221213 14:11:01.425"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:01.426" level="INFO">${response_data} = {'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}, 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'address': '1....</msg>
<status status="PASS" starttime="20221213 14:11:01.425" endtime="20221213 14:11:01.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.426" endtime="20221213 14:11:01.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:01.427" endtime="20221213 14:11:01.428"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.385" endtime="20221213 14:11:01.428"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${4}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.472" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 path_url=/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.472" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'uvicorn', 'content-length': '317', 'content-type': 'application/json'} 
 body={"object_type":"ResolvedHostname","scan_profile":{"reference":"ResolvedHostname|internet|example.com|internet|1.1.1.1","level":4,"scan_profile_type":"inherited"},"primary_key":"ResolvedHostname|internet|example.com|internet|1.1.1.1","hostname":"Hostname|internet|example.com","address":"IPAddressV4|internet|1.1.1.1"} 
 </msg>
<msg timestamp="20221213 14:11:01.472" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.429" endtime="20221213 14:11:01.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.473" endtime="20221213 14:11:01.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.475" endtime="20221213 14:11:01.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:01.477" level="INFO">${response_data} = {'object_type': 'ResolvedHostname', 'scan_profile': {'reference': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'level': 4, 'scan_profile_type': 'inherited'}, 'primary_key': 'ResolvedHostn...</msg>
<status status="PASS" starttime="20221213 14:11:01.476" endtime="20221213 14:11:01.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.477" endtime="20221213 14:11:01.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:01.479" endtime="20221213 14:11:01.480"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.428" endtime="20221213 14:11:01.480"/>
</kw>
<kw name="Verify Scan Profile Increment Queue">
<arg>${REF_HOSTNAME}</arg>
<arg>${4}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.483" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:01.482" endtime="20221213 14:11:01.483"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.510" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:01.510" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '364', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:01.510" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.483" endtime="20221213 14:11:01.511"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:01.511" endtime="20221213 14:11:01.511"/>
</return>
<msg timestamp="20221213 14:11:01.512" level="INFO">${messages} = [{'payload_bytes': 184, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostn...</msg>
<status status="PASS" starttime="20221213 14:11:01.481" endtime="20221213 14:11:01.512"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 184, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostna...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:01.514" level="INFO">${payload} = {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:01.513" endtime="20221213 14:11:01.514"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:01.515" endtime="20221213 14:11:01.516"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:01.517" level="INFO">@{reference_parts} = [ Hostname | internet | example.com ]</msg>
<status status="PASS" starttime="20221213 14:11:01.517" endtime="20221213 14:11:01.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.517" endtime="20221213 14:11:01.518"/>
</kw>
<return>
<status status="PASS" starttime="20221213 14:11:01.518" endtime="20221213 14:11:01.518"/>
</return>
<status status="PASS" starttime="20221213 14:11:01.515" endtime="20221213 14:11:01.518"/>
</branch>
<status status="PASS" starttime="20221213 14:11:01.514" endtime="20221213 14:11:01.518"/>
</if>
<status status="PASS" starttime="20221213 14:11:01.513" endtime="20221213 14:11:01.518"/>
</iter>
<status status="PASS" starttime="20221213 14:11:01.512" endtime="20221213 14:11:01.518"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be incremented to ${scan_level}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.518" endtime="20221213 14:11:01.518"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.480" endtime="20221213 14:11:01.518"/>
</kw>
<kw name="Verify Scan Profile Increment Queue">
<arg>${REF_IPADDR}</arg>
<arg>${2}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.521" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:01.520" endtime="20221213 14:11:01.521"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.537" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:01.537" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '364', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:01.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.521" endtime="20221213 14:11:01.538"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:01.538" endtime="20221213 14:11:01.538"/>
</return>
<msg timestamp="20221213 14:11:01.539" level="INFO">${messages} = [{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostna...</msg>
<status status="PASS" starttime="20221213 14:11:01.520" endtime="20221213 14:11:01.539"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostnam...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:01.541" level="INFO">${payload} = {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:01.540" endtime="20221213 14:11:01.541"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.542" endtime="20221213 14:11:01.542"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.542" endtime="20221213 14:11:01.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.542" endtime="20221213 14:11:01.542"/>
</kw>
<return>
<status status="NOT RUN" starttime="20221213 14:11:01.542" endtime="20221213 14:11:01.543"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:01.542" endtime="20221213 14:11:01.543"/>
</branch>
<status status="PASS" starttime="20221213 14:11:01.541" endtime="20221213 14:11:01.543"/>
</if>
<status status="PASS" starttime="20221213 14:11:01.540" endtime="20221213 14:11:01.543"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 185, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 2, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "IPAddre...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:01.544" level="INFO">${payload} = {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:01.543" endtime="20221213 14:11:01.544"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:01.544" endtime="20221213 14:11:01.545"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:01.545" level="INFO">@{reference_parts} = [ IPAddressV4 | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:01.545" endtime="20221213 14:11:01.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.546" endtime="20221213 14:11:01.546"/>
</kw>
<return>
<status status="PASS" starttime="20221213 14:11:01.546" endtime="20221213 14:11:01.546"/>
</return>
<status status="PASS" starttime="20221213 14:11:01.544" endtime="20221213 14:11:01.547"/>
</branch>
<status status="PASS" starttime="20221213 14:11:01.544" endtime="20221213 14:11:01.547"/>
</if>
<status status="PASS" starttime="20221213 14:11:01.543" endtime="20221213 14:11:01.547"/>
</iter>
<status status="PASS" starttime="20221213 14:11:01.540" endtime="20221213 14:11:01.547"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be incremented to ${scan_level}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.547" endtime="20221213 14:11:01.547"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.519" endtime="20221213 14:11:01.547"/>
</kw>
<kw name="Verify Scan Profile Increment Queue">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${4}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.549" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:01.548" endtime="20221213 14:11:01.549"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.560" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:01.560" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '364', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:01.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.549" endtime="20221213 14:11:01.561"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:01.561" endtime="20221213 14:11:01.561"/>
</return>
<msg timestamp="20221213 14:11:01.562" level="INFO">${messages} = [{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostna...</msg>
<status status="PASS" starttime="20221213 14:11:01.548" endtime="20221213 14:11:01.562"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostnam...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:01.563" level="INFO">${payload} = {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:01.562" endtime="20221213 14:11:01.563"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.564" endtime="20221213 14:11:01.564"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.564" endtime="20221213 14:11:01.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.564" endtime="20221213 14:11:01.564"/>
</kw>
<return>
<status status="NOT RUN" starttime="20221213 14:11:01.564" endtime="20221213 14:11:01.564"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:01.564" endtime="20221213 14:11:01.564"/>
</branch>
<status status="PASS" starttime="20221213 14:11:01.563" endtime="20221213 14:11:01.564"/>
</if>
<status status="PASS" starttime="20221213 14:11:01.562" endtime="20221213 14:11:01.564"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 185, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 2, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "IPAddre...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:01.565" level="INFO">${payload} = {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:01.564" endtime="20221213 14:11:01.566"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.566" endtime="20221213 14:11:01.567"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.567" endtime="20221213 14:11:01.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.567" endtime="20221213 14:11:01.567"/>
</kw>
<return>
<status status="NOT RUN" starttime="20221213 14:11:01.567" endtime="20221213 14:11:01.567"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:01.566" endtime="20221213 14:11:01.567"/>
</branch>
<status status="PASS" starttime="20221213 14:11:01.566" endtime="20221213 14:11:01.567"/>
</if>
<status status="PASS" starttime="20221213 14:11:01.564" endtime="20221213 14:11:01.567"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 243, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 1, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Resolve...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:01.568" level="INFO">${payload} = {'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'object_type': 'ResolvedHostname', 'scan_profile': {'reference': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'le...</msg>
<status status="PASS" starttime="20221213 14:11:01.567" endtime="20221213 14:11:01.568"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:01.569" endtime="20221213 14:11:01.570"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:01.570" level="INFO">@{reference_parts} = [ ResolvedHostname | internet | example.com | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:01.570" endtime="20221213 14:11:01.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:01.570" endtime="20221213 14:11:01.571"/>
</kw>
<return>
<status status="PASS" starttime="20221213 14:11:01.571" endtime="20221213 14:11:01.571"/>
</return>
<status status="PASS" starttime="20221213 14:11:01.569" endtime="20221213 14:11:01.571"/>
</branch>
<status status="PASS" starttime="20221213 14:11:01.568" endtime="20221213 14:11:01.571"/>
</if>
<status status="PASS" starttime="20221213 14:11:01.567" endtime="20221213 14:11:01.571"/>
</iter>
<status status="PASS" starttime="20221213 14:11:01.562" endtime="20221213 14:11:01.571"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be incremented to ${scan_level}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.572" endtime="20221213 14:11:01.572"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.547" endtime="20221213 14:11:01.572"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>ge</arg>
<arg>0</arg>
<arg>${6}</arg>
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.574" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.574" endtime="20221213 14:11:01.574"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:01.574" endtime="20221213 14:11:01.574"/>
</return>
<msg timestamp="20221213 14:11:01.575" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.573" endtime="20221213 14:11:01.575"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>scan_level_operator=${operator}</arg>
<arg>scan_level=${scan_level}</arg>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.575" level="INFO">${params} = {'scan_level_operator': 'ge', 'scan_level': '0', 'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:01.575" endtime="20221213 14:11:01.575"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/objects</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.699" level="INFO">GET Request : url=http://localhost:29000/_dev/objects?scan_level_operator=ge&amp;scan_level=0&amp;valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/objects?scan_level_operator=ge&amp;scan_level=0&amp;valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.699" level="INFO">GET Response : url=http://localhost:29000/_dev/objects?scan_level_operator=ge&amp;scan_level=0&amp;valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'uvicorn', 'content-length': '22', 'content-type': 'application/json'} 
 body={"count":0,"items":[]} 
 </msg>
<msg timestamp="20221213 14:11:01.700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.575" endtime="20221213 14:11:01.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.700" endtime="20221213 14:11:01.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:01.704" level="INFO">${response_data} = {'count': 0, 'items': []}</msg>
<status status="PASS" starttime="20221213 14:11:01.702" endtime="20221213 14:11:01.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["count"]}</arg>
<arg>${expected_count}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.706" level="FAIL">0 != 6</msg>
<status status="FAIL" starttime="20221213 14:11:01.704" endtime="20221213 14:11:01.706"/>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<arg>${response_data["items"]}</arg>
<arg>${expected_count}</arg>
<doc>Verifies that the length of the given item is correct.</doc>
<status status="NOT RUN" starttime="20221213 14:11:01.706" endtime="20221213 14:11:01.707"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:01.572" endtime="20221213 14:11:01.707"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>gt</arg>
<arg>0</arg>
<arg>${4}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.707" endtime="20221213 14:11:01.708"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>le</arg>
<arg>0</arg>
<arg>${2}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.708" endtime="20221213 14:11:01.708"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>le</arg>
<arg>2</arg>
<arg>${4}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.708" endtime="20221213 14:11:01.708"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>le</arg>
<arg>4</arg>
<arg>${6}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.709" endtime="20221213 14:11:01.709"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>lt</arg>
<arg>2</arg>
<arg>${2}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.709" endtime="20221213 14:11:01.709"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>eq</arg>
<arg>2</arg>
<arg>${2}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.709" endtime="20221213 14:11:01.710"/>
</kw>
<kw name="Verify Scan LeveL Filter">
<arg>ne</arg>
<arg>2</arg>
<arg>${4}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.710" endtime="20221213 14:11:01.710"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_HOSTNAME}</arg>
<arg>${{[4]}}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.710" endtime="20221213 14:11:01.710"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_IPADDR}</arg>
<arg>${{[2]}}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.710" endtime="20221213 14:11:01.710"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${{[4]}}</arg>
<status status="NOT RUN" starttime="20221213 14:11:01.711" endtime="20221213 14:11:01.711"/>
</kw>
<kw name="Teardown Test" type="TEARDOWN">
<kw name="Cleanup" library="robot">
<kw name="Clear XTDB" library="robot">
<kw name="Get All Document Ids" library="robot">
<var>${ids}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>{:query {:find [?e] :where [[?e :xt/id]]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:01.713" level="INFO">${query} = {:query {:find [?e] :where [[?e :xt/id]]}}</msg>
<status status="PASS" starttime="20221213 14:11:01.713" endtime="20221213 14:11:01.714"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/edn</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.714" level="INFO">${headers} = {'Content-Type': 'application/edn', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:01.714" endtime="20221213 14:11:01.714"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/query</arg>
<arg>data=${query}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.725" level="INFO">POST Request : url=http://localhost:29002/_xtdb/query 
 path_url=/_xtdb/query 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/edn', 'Content-Length': '42'} 
 body={:query {:find [?e] :where [[?e :xt/id]]}} 
 </msg>
<msg timestamp="20221213 14:11:01.725" level="INFO">POST Response : url=http://localhost:29002/_xtdb/query 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '444', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body=[["Hostname|internet|example.com"],["IPAddressV4|internet|1.1.1.1"],["IPPort|internet|1.1.1.1|tcp|80"],["Origin|observation|boefje_normalizer_x|Hostname|internet|example.com"],["ResolvedHostname|internet|example.com|internet|1.1.1.1"],["ScanProfile|Hostname|internet|example.com"],["ScanProfile|IPAddressV4|internet|1.1.1.1"],["ScanProfile|IPPort|internet|1.1.1.1|tcp|80"],["ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1"]] 
 </msg>
<msg timestamp="20221213 14:11:01.725" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.714" endtime="20221213 14:11:01.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rows}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:01.727" level="INFO">${rows} = [['Hostname|internet|example.com'], ['IPAddressV4|internet|1.1.1.1'], ['IPPort|internet|1.1.1.1|tcp|80'], ['Origin|observation|boefje_normalizer_x|Hostname|internet|example.com'], ['ResolvedHostname|i...</msg>
<status status="PASS" starttime="20221213 14:11:01.726" endtime="20221213 14:11:01.727"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ids}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.728" level="INFO">${ids} = []</msg>
<status status="PASS" starttime="20221213 14:11:01.728" endtime="20221213 14:11:01.728"/>
</kw>
<for flavor="IN">
<var>${cols}</var>
<value>@{rows}</value>
<iter>
<var name="${cols}">['Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.728" endtime="20221213 14:11:01.730"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.728" endtime="20221213 14:11:01.730"/>
</iter>
<iter>
<var name="${cols}">['IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.730" endtime="20221213 14:11:01.731"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.730" endtime="20221213 14:11:01.732"/>
</iter>
<iter>
<var name="${cols}">['IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.732" endtime="20221213 14:11:01.733"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.732" endtime="20221213 14:11:01.733"/>
</iter>
<iter>
<var name="${cols}">['Origin|observation|boefje_normalizer_x|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.733" endtime="20221213 14:11:01.735"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.733" endtime="20221213 14:11:01.735"/>
</iter>
<iter>
<var name="${cols}">['ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.735" endtime="20221213 14:11:01.737"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.735" endtime="20221213 14:11:01.737"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.737" endtime="20221213 14:11:01.739"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.737" endtime="20221213 14:11:01.739"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.740" endtime="20221213 14:11:01.741"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.739" endtime="20221213 14:11:01.741"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.742" endtime="20221213 14:11:01.743"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.741" endtime="20221213 14:11:01.743"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.744" endtime="20221213 14:11:01.746"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.743" endtime="20221213 14:11:01.746"/>
</iter>
<status status="PASS" starttime="20221213 14:11:01.728" endtime="20221213 14:11:01.746"/>
</for>
<return>
<value>${ids}</value>
<status status="PASS" starttime="20221213 14:11:01.746" endtime="20221213 14:11:01.746"/>
</return>
<msg timestamp="20221213 14:11:01.747" level="INFO">${ids} = ['Hostname|internet|example.com', 'IPAddressV4|internet|1.1.1.1', 'IPPort|internet|1.1.1.1|tcp|80', 'Origin|observation|boefje_normalizer_x|Hostname|internet|example.com', 'ResolvedHostname|internet|e...</msg>
<status status="PASS" starttime="20221213 14:11:01.713" endtime="20221213 14:11:01.747"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${operations}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.747" level="INFO">${operations} = []</msg>
<status status="PASS" starttime="20221213 14:11:01.747" endtime="20221213 14:11:01.747"/>
</kw>
<for flavor="IN">
<var>${id}</var>
<value>@{ids}</value>
<iter>
<var name="${id}">Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.748" level="INFO">${operation} = ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.748" endtime="20221213 14:11:01.748"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.749" endtime="20221213 14:11:01.749"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.748" endtime="20221213 14:11:01.749"/>
</iter>
<iter>
<var name="${id}">IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.750" level="INFO">${operation} = ['evict', 'IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.750" endtime="20221213 14:11:01.750"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.751" endtime="20221213 14:11:01.751"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.749" endtime="20221213 14:11:01.751"/>
</iter>
<iter>
<var name="${id}">IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.752" level="INFO">${operation} = ['evict', 'IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.752" endtime="20221213 14:11:01.752"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.753" endtime="20221213 14:11:01.753"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.752" endtime="20221213 14:11:01.753"/>
</iter>
<iter>
<var name="${id}">Origin|observation|boefje_normalizer_x|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.754" level="INFO">${operation} = ['evict', 'Origin|observation|boefje_normalizer_x|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.754" endtime="20221213 14:11:01.754"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.754" endtime="20221213 14:11:01.755"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.753" endtime="20221213 14:11:01.755"/>
</iter>
<iter>
<var name="${id}">ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.756" level="INFO">${operation} = ['evict', 'ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.756" endtime="20221213 14:11:01.756"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.757" endtime="20221213 14:11:01.757"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.755" endtime="20221213 14:11:01.757"/>
</iter>
<iter>
<var name="${id}">ScanProfile|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.758" level="INFO">${operation} = ['evict', 'ScanProfile|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.758" endtime="20221213 14:11:01.758"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.759" endtime="20221213 14:11:01.760"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.757" endtime="20221213 14:11:01.760"/>
</iter>
<iter>
<var name="${id}">ScanProfile|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.761" level="INFO">${operation} = ['evict', 'ScanProfile|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.761" endtime="20221213 14:11:01.761"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.762" endtime="20221213 14:11:01.762"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.760" endtime="20221213 14:11:01.762"/>
</iter>
<iter>
<var name="${id}">ScanProfile|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.763" level="INFO">${operation} = ['evict', 'ScanProfile|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.763" endtime="20221213 14:11:01.763"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.763" endtime="20221213 14:11:01.764"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.762" endtime="20221213 14:11:01.764"/>
</iter>
<iter>
<var name="${id}">ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:01.765" level="INFO">${operation} = ['evict', 'ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:01.765" endtime="20221213 14:11:01.765"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:01.765" endtime="20221213 14:11:01.766"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.764" endtime="20221213 14:11:01.766"/>
</iter>
<status status="PASS" starttime="20221213 14:11:01.747" endtime="20221213 14:11:01.766"/>
</for>
<kw name="Create Dictionary" library="BuiltIn">
<var>${transaction}</var>
<arg>tx-ops=${operations}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.767" level="INFO">${transaction} = {'tx-ops': [['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00'], ['evict', 'IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00'], ['evict', 'IPPort|internet|1.1.1.1|tcp|80',...</msg>
<status status="PASS" starttime="20221213 14:11:01.766" endtime="20221213 14:11:01.767"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.768" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:01.767" endtime="20221213 14:11:01.768"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/submit-tx</arg>
<arg>json=${transaction}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.786" level="INFO">POST Request : url=http://localhost:29002/_xtdb/submit-tx 
 path_url=/_xtdb/submit-tx 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '806'} 
 body=b'{"tx-ops": [["evict", "Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|observation|boefje_normalizer_x|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"]]}' 
 </msg>
<msg timestamp="20221213 14:11:01.786" level="INFO">POST Response : url=http://localhost:29002/_xtdb/submit-tx 
 status=202, reason=Accepted 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:01 GMT', 'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '43', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={"txId":68,"txTime":"2022-12-13T13:11:01Z"} 
 </msg>
<msg timestamp="20221213 14:11:01.787" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.769" endtime="20221213 14:11:01.787"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.825" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.825" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:01 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:01.790-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:01.826" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.788" endtime="20221213 14:11:01.826"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.787" endtime="20221213 14:11:01.826"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.712" endtime="20221213 14:11:01.826"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:01.839" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:01.839" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:01 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:01.790-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:01.839" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.827" endtime="20221213 14:11:01.839"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.827" endtime="20221213 14:11:01.839"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>octopoes</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.841" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:01.840" endtime="20221213 14:11:01.841"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.867" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 path_url=/api/queues/kat/octopoes/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:01.867" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:01.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.842" endtime="20221213 14:11:01.868"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:01.868" endtime="20221213 14:11:01.868"/>
</return>
<status status="PASS" starttime="20221213 14:11:01.840" endtime="20221213 14:11:01.869"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.871" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:01.870" endtime="20221213 14:11:01.871"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.889" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:01.889" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '364', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:01.889" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.871" endtime="20221213 14:11:01.889"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:01.889" endtime="20221213 14:11:01.889"/>
</return>
<status status="PASS" starttime="20221213 14:11:01.870" endtime="20221213 14:11:01.891"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:01.893" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:01.892" endtime="20221213 14:11:01.893"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:01.917" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:01.917" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '399', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:01 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":266,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":266,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":350,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":268,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:01.918" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.893" endtime="20221213 14:11:01.918"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:01.918" endtime="20221213 14:11:01.918"/>
</return>
<status status="PASS" starttime="20221213 14:11:01.891" endtime="20221213 14:11:01.920"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.711" endtime="20221213 14:11:01.920"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.922" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:01.922" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:01.922" endtime="20221213 14:11:01.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:01.923" endtime="20221213 14:11:01.923"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.921" endtime="20221213 14:11:01.923"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.921" endtime="20221213 14:11:01.924"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:01.926" level="INFO">Counting tasks of type task-received: 3</msg>
<msg timestamp="20221213 14:11:01.926" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20221213 14:11:01.925" endtime="20221213 14:11:01.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:01.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:01.927" level="FAIL">3 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:01.926" endtime="20221213 14:11:01.927"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:01.924" endtime="20221213 14:11:01.928"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.029" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:02.029" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:02.029" endtime="20221213 14:11:02.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:02.029" endtime="20221213 14:11:02.030"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.028" endtime="20221213 14:11:02.030"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.924" endtime="20221213 14:11:02.030"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.032" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:02.032" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:02.032" endtime="20221213 14:11:02.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.033" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.032" endtime="20221213 14:11:02.034"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.031" endtime="20221213 14:11:02.034"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.136" level="INFO">Counting tasks of type task-started: 4</msg>
<msg timestamp="20221213 14:11:02.136" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20221213 14:11:02.135" endtime="20221213 14:11:02.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.136" level="FAIL">4 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.136" endtime="20221213 14:11:02.137"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.135" endtime="20221213 14:11:02.137"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.238" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:02.238" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:02.238" endtime="20221213 14:11:02.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.240" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.239" endtime="20221213 14:11:02.240"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.237" endtime="20221213 14:11:02.240"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.342" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:02.342" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:02.342" endtime="20221213 14:11:02.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.343" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.343" endtime="20221213 14:11:02.343"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.341" endtime="20221213 14:11:02.344"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.447" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:02.447" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:02.447" endtime="20221213 14:11:02.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:02.447" endtime="20221213 14:11:02.448"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.446" endtime="20221213 14:11:02.448"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.030" endtime="20221213 14:11:02.448"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.920" endtime="20221213 14:11:02.448"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:02.457" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:02.457" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:02 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:02.090-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:02.457" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:02.448" endtime="20221213 14:11:02.457"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.448" endtime="20221213 14:11:02.457"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.920" endtime="20221213 14:11:02.457"/>
</kw>
<kw name="Stop Monitoring" library="CeleryMonitor">
<status status="PASS" starttime="20221213 14:11:02.458" endtime="20221213 14:11:02.458"/>
</kw>
<status status="PASS" starttime="20221213 14:11:01.711" endtime="20221213 14:11:02.458"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:00.845" endtime="20221213 14:11:02.459">0 != 6</status>
</test>
<test id="s1-s1-t2" name="Recalculate Inheritance After Modification" line="36">
<kw name="Setup Test" type="SETUP">
<kw name="Start Monitoring" library="CeleryMonitor">
<arg>${QUEUE_URI}</arg>
<msg timestamp="20221213 14:11:02.461" level="INFO">Started monitoring</msg>
<status status="PASS" starttime="20221213 14:11:02.460" endtime="20221213 14:11:02.461"/>
</kw>
<kw name="Insert Normalizer Output" library="robot">
<kw name="Insert Origin" library="robot">
<arg>tests/fixtures/normalizer_output.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${norm_output_json}</var>
<arg>${origin_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20221213 14:11:02.463" level="INFO" html="true">Getting file '&lt;a href="file:///Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json"&gt;/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json&lt;/a&gt;'.</msg>
<msg timestamp="20221213 14:11:02.464" level="INFO">${norm_output_json} = {
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",...</msg>
<status status="PASS" starttime="20221213 14:11:02.463" endtime="20221213 14:11:02.464"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/observations</arg>
<arg>${norm_output_json}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:02.614" level="INFO">POST Request : url=http://localhost:29000/_dev/observations 
 path_url=/_dev/observations 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '759'} 
 body={
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",
      "fqdn": "Hostname|internet|example.com."
    },
    {
      "object_type": "ResolvedHostname",
      "hostname": "Hostname|internet|example.com",
      "address": "IPAddressV4|internet|1.1.1.1"
    },
    {
      "object_type": "IPAddressV4",
      "network": "Network|internet",
      "address": "1.1.1.1"
    },
    {
        "object_type": "IPPort",
        "address": "IPAddressV4|internet|1.1.1.1",
        "protocol": "tcp",
        "port": 80,
        "state": "open"
    }
  ],
  "valid_time": "2019-01-01T00:00:00+00:00",
  "task_id": "1234"
} 
 </msg>
<msg timestamp="20221213 14:11:02.614" level="INFO">POST Response : url=http://localhost:29000/_dev/observations 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:02 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:02.614" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:02.464" endtime="20221213 14:11:02.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:02.614" endtime="20221213 14:11:02.616"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.462" endtime="20221213 14:11:02.616"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.461" endtime="20221213 14:11:02.616"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.619" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:02.619" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:02.618" endtime="20221213 14:11:02.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:02.619" endtime="20221213 14:11:02.619"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.618" endtime="20221213 14:11:02.619"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.618" endtime="20221213 14:11:02.620"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.621" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:02.621" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:02.620" endtime="20221213 14:11:02.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:02.621" endtime="20221213 14:11:02.622"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.620" endtime="20221213 14:11:02.622"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.620" endtime="20221213 14:11:02.622"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.623" level="INFO">Counting tasks of type task-started: 1</msg>
<msg timestamp="20221213 14:11:02.623" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:02.623" endtime="20221213 14:11:02.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.624" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.623" endtime="20221213 14:11:02.624"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.622" endtime="20221213 14:11:02.624"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.726" level="INFO">Counting tasks of type task-started: 4</msg>
<msg timestamp="20221213 14:11:02.726" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20221213 14:11:02.725" endtime="20221213 14:11:02.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.727" level="FAIL">4 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.726" endtime="20221213 14:11:02.727"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.725" endtime="20221213 14:11:02.727"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.828" level="INFO">Counting tasks of type task-started: 5</msg>
<msg timestamp="20221213 14:11:02.828" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20221213 14:11:02.828" endtime="20221213 14:11:02.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.829" level="FAIL">5 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.829" endtime="20221213 14:11:02.829"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.827" endtime="20221213 14:11:02.829"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:02.931" level="INFO">Counting tasks of type task-started: 4</msg>
<msg timestamp="20221213 14:11:02.931" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20221213 14:11:02.931" endtime="20221213 14:11:02.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:02.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:02.932" level="FAIL">4 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:02.932" endtime="20221213 14:11:02.932"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:02.930" endtime="20221213 14:11:02.932"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.033" level="INFO">Counting tasks of type task-started: 2</msg>
<msg timestamp="20221213 14:11:03.034" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20221213 14:11:03.033" endtime="20221213 14:11:03.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:03.034" level="FAIL">2 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:03.034" endtime="20221213 14:11:03.034"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:03.033" endtime="20221213 14:11:03.034"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.136" level="INFO">Counting tasks of type task-started: 1</msg>
<msg timestamp="20221213 14:11:03.136" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:03.135" endtime="20221213 14:11:03.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:03.136" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:03.136" endtime="20221213 14:11:03.137"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:03.135" endtime="20221213 14:11:03.137"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.238" level="INFO">Counting tasks of type task-started: 3</msg>
<msg timestamp="20221213 14:11:03.238" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20221213 14:11:03.238" endtime="20221213 14:11:03.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:03.239" level="FAIL">3 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:03.238" endtime="20221213 14:11:03.240"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:03.237" endtime="20221213 14:11:03.240"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.342" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:03.342" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:03.342" endtime="20221213 14:11:03.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.342" endtime="20221213 14:11:03.342"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.341" endtime="20221213 14:11:03.342"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.622" endtime="20221213 14:11:03.342"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.617" endtime="20221213 14:11:03.343"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:03.349" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:03.349" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:03 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:03.218-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:03.349" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.343" endtime="20221213 14:11:03.349"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.343" endtime="20221213 14:11:03.349"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.617" endtime="20221213 14:11:03.349"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.460" endtime="20221213 14:11:03.350"/>
</kw>
<kw name="Declare Scan Profile">
<arg>${REF_HOSTNAME}</arg>
<arg>${4}</arg>
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.351" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.351" endtime="20221213 14:11:03.351"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:03.351" endtime="20221213 14:11:03.351"/>
</return>
<msg timestamp="20221213 14:11:03.351" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.350" endtime="20221213 14:11:03.351"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>reference=${reference}</arg>
<arg>level=${scan_level}</arg>
<arg>scan_profile_type=declared</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.352" level="INFO">${data} = {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}</msg>
<status status="PASS" starttime="20221213 14:11:03.352" endtime="20221213 14:11:03.352"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20221213 14:11:03.401" level="INFO">PUT Request : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json'} 
 body=b'{"reference": "Hostname|internet|example.com", "level": 4, "scan_profile_type": "declared"}' 
 </msg>
<msg timestamp="20221213 14:11:03.401" level="INFO">PUT Response : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:02 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:03.401" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.352" endtime="20221213 14:11:03.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.402" endtime="20221213 14:11:03.403"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.350" endtime="20221213 14:11:03.403"/>
</kw>
<kw name="Declare Scan Profile">
<arg>${REF_IPADDR}</arg>
<arg>${2}</arg>
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.405" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.405" endtime="20221213 14:11:03.405"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:03.405" endtime="20221213 14:11:03.405"/>
</return>
<msg timestamp="20221213 14:11:03.406" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.404" endtime="20221213 14:11:03.406"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>reference=${reference}</arg>
<arg>level=${scan_level}</arg>
<arg>scan_profile_type=declared</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.406" level="INFO">${data} = {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}</msg>
<status status="PASS" starttime="20221213 14:11:03.406" endtime="20221213 14:11:03.406"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20221213 14:11:03.447" level="INFO">PUT Request : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json'} 
 body=b'{"reference": "IPAddressV4|internet|1.1.1.1", "level": 2, "scan_profile_type": "declared"}' 
 </msg>
<msg timestamp="20221213 14:11:03.447" level="INFO">PUT Response : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:03.447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.406" endtime="20221213 14:11:03.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.448" endtime="20221213 14:11:03.449"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.404" endtime="20221213 14:11:03.449"/>
</kw>
<kw name="Recalculate Scan Profiles">
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.451" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.451" endtime="20221213 14:11:03.452"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:03.452" endtime="20221213 14:11:03.452"/>
</return>
<msg timestamp="20221213 14:11:03.452" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.450" endtime="20221213 14:11:03.452"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles/recalculate</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:03.636" level="INFO">GET Request : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:03.636" level="INFO">GET Response : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:03.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.452" endtime="20221213 14:11:03.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.637" endtime="20221213 14:11:03.638"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.640" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:03.640" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:03.639" endtime="20221213 14:11:03.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.640" endtime="20221213 14:11:03.640"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.639" endtime="20221213 14:11:03.640"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.638" endtime="20221213 14:11:03.640"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.641" level="INFO">Counting tasks of type task-received: 1</msg>
<msg timestamp="20221213 14:11:03.641" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:03.641" endtime="20221213 14:11:03.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:03.642" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:03.642" endtime="20221213 14:11:03.642"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:03.641" endtime="20221213 14:11:03.642"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.745" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:03.745" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:03.745" endtime="20221213 14:11:03.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.745" endtime="20221213 14:11:03.745"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.745" endtime="20221213 14:11:03.746"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.640" endtime="20221213 14:11:03.746"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.746" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:03.746" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:03.746" endtime="20221213 14:11:03.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.746" endtime="20221213 14:11:03.747"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.746" endtime="20221213 14:11:03.747"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.746" endtime="20221213 14:11:03.747"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.638" endtime="20221213 14:11:03.747"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:03.752" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:03.752" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:03 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:03.623-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:03.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.747" endtime="20221213 14:11:03.752"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.747" endtime="20221213 14:11:03.752"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.638" endtime="20221213 14:11:03.753"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.449" endtime="20221213 14:11:03.753"/>
</kw>
<kw name="Set Scan Profile To Empty">
<arg>${REF_HOSTNAME}</arg>
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.754" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.753" endtime="20221213 14:11:03.754"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:03.754" endtime="20221213 14:11:03.754"/>
</return>
<msg timestamp="20221213 14:11:03.754" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.753" endtime="20221213 14:11:03.754"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>reference=${reference}</arg>
<arg>scan_profile_type=empty</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.754" level="INFO">${data} = {'reference': 'Hostname|internet|example.com', 'scan_profile_type': 'empty'}</msg>
<status status="PASS" starttime="20221213 14:11:03.754" endtime="20221213 14:11:03.754"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20221213 14:11:03.785" level="INFO">PUT Request : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '76', 'Content-Type': 'application/json'} 
 body=b'{"reference": "Hostname|internet|example.com", "scan_profile_type": "empty"}' 
 </msg>
<msg timestamp="20221213 14:11:03.785" level="INFO">PUT Response : url=http://localhost:29000/_dev/scan_profiles?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:03.785" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.755" endtime="20221213 14:11:03.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.785" endtime="20221213 14:11:03.786"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.753" endtime="20221213 14:11:03.787"/>
</kw>
<kw name="Recalculate Scan Profiles">
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:03.788" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.787" endtime="20221213 14:11:03.788"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:03.788" endtime="20221213 14:11:03.788"/>
</return>
<msg timestamp="20221213 14:11:03.788" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:03.787" endtime="20221213 14:11:03.788"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles/recalculate</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:03.869" level="INFO">GET Request : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:03.869" level="INFO">GET Response : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:03.870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.788" endtime="20221213 14:11:03.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.870" endtime="20221213 14:11:03.871"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.874" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:03.874" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:03.873" endtime="20221213 14:11:03.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.874" endtime="20221213 14:11:03.874"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.873" endtime="20221213 14:11:03.874"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.872" endtime="20221213 14:11:03.875"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.876" level="INFO">Counting tasks of type task-received: 1</msg>
<msg timestamp="20221213 14:11:03.876" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:03.875" endtime="20221213 14:11:03.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:03.876" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:03.876" endtime="20221213 14:11:03.876"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:03.875" endtime="20221213 14:11:03.876"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.978" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:03.978" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:03.978" endtime="20221213 14:11:03.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.979" endtime="20221213 14:11:03.979"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.977" endtime="20221213 14:11:03.979"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.875" endtime="20221213 14:11:03.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:03.980" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:03.981" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:03.980" endtime="20221213 14:11:03.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:03.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.981" endtime="20221213 14:11:03.981"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.980" endtime="20221213 14:11:03.982"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.979" endtime="20221213 14:11:03.982"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.872" endtime="20221213 14:11:03.982"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:03.988" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:03.988" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:03 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:03.867-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:03.988" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.982" endtime="20221213 14:11:03.988"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.982" endtime="20221213 14:11:03.988"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.871" endtime="20221213 14:11:03.989"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.787" endtime="20221213 14:11:03.989"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_HOSTNAME}</arg>
<arg>${0}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:04.016" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 path_url=/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:04.016" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '277', 'content-type': 'application/json'} 
 body={"object_type":"Hostname","scan_profile":{"reference":"Hostname|internet|example.com","level":0,"scan_profile_type":"empty"},"primary_key":"Hostname|internet|example.com","network":"Network|internet","name":"example.com","fqdn":"Hostname|internet|example.com.","dns_zone":null} 
 </msg>
<msg timestamp="20221213 14:11:04.016" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:03.990" endtime="20221213 14:11:04.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.017" endtime="20221213 14:11:04.017"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.018" endtime="20221213 14:11:04.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:04.019" level="INFO">${response_data} = {'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'Hostname|internet|example.com', 'network': 'Networ...</msg>
<status status="PASS" starttime="20221213 14:11:04.018" endtime="20221213 14:11:04.019"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.019" endtime="20221213 14:11:04.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.020" endtime="20221213 14:11:04.021"/>
</kw>
<status status="PASS" starttime="20221213 14:11:03.989" endtime="20221213 14:11:04.021"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_IPADDR}</arg>
<arg>${2}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:04.047" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 path_url=/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:04.047" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '224', 'content-type': 'application/json'} 
 body={"object_type":"IPAddressV4","scan_profile":{"reference":"IPAddressV4|internet|1.1.1.1","level":2,"scan_profile_type":"declared"},"primary_key":"IPAddressV4|internet|1.1.1.1","address":"1.1.1.1","network":"Network|internet"} 
 </msg>
<msg timestamp="20221213 14:11:04.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.022" endtime="20221213 14:11:04.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.047" endtime="20221213 14:11:04.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.048" endtime="20221213 14:11:04.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:04.050" level="INFO">${response_data} = {'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}, 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'address': '1....</msg>
<status status="PASS" starttime="20221213 14:11:04.049" endtime="20221213 14:11:04.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.050" endtime="20221213 14:11:04.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.051" endtime="20221213 14:11:04.051"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.021" endtime="20221213 14:11:04.051"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${0}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:04.073" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 path_url=/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:04.073" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '313', 'content-type': 'application/json'} 
 body={"object_type":"ResolvedHostname","scan_profile":{"reference":"ResolvedHostname|internet|example.com|internet|1.1.1.1","level":0,"scan_profile_type":"empty"},"primary_key":"ResolvedHostname|internet|example.com|internet|1.1.1.1","hostname":"Hostname|internet|example.com","address":"IPAddressV4|internet|1.1.1.1"} 
 </msg>
<msg timestamp="20221213 14:11:04.073" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.052" endtime="20221213 14:11:04.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.074" endtime="20221213 14:11:04.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.074" endtime="20221213 14:11:04.075"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:04.075" level="INFO">${response_data} = {'object_type': 'ResolvedHostname', 'scan_profile': {'reference': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'ResolvedHostname|...</msg>
<status status="PASS" starttime="20221213 14:11:04.075" endtime="20221213 14:11:04.076"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.076" endtime="20221213 14:11:04.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.076" endtime="20221213 14:11:04.077"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.051" endtime="20221213 14:11:04.077"/>
</kw>
<kw name="Verify Scan Profile Increment Queue">
<arg>${REF_HOSTNAME}</arg>
<arg>${4}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.079" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.078" endtime="20221213 14:11:04.079"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.087" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.087" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '406', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":226,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.087" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.079" endtime="20221213 14:11:04.087"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.087" endtime="20221213 14:11:04.087"/>
</return>
<msg timestamp="20221213 14:11:04.088" level="INFO">${messages} = [{'payload_bytes': 184, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostn...</msg>
<status status="PASS" starttime="20221213 14:11:04.078" endtime="20221213 14:11:04.088"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 184, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostna...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.089" level="INFO">${payload} = {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:04.088" endtime="20221213 14:11:04.089"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.090" endtime="20221213 14:11:04.090"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.091" level="INFO">@{reference_parts} = [ Hostname | internet | example.com ]</msg>
<status status="PASS" starttime="20221213 14:11:04.091" endtime="20221213 14:11:04.091"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.091" endtime="20221213 14:11:04.092"/>
</kw>
<return>
<status status="PASS" starttime="20221213 14:11:04.092" endtime="20221213 14:11:04.092"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.090" endtime="20221213 14:11:04.092"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.089" endtime="20221213 14:11:04.092"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.088" endtime="20221213 14:11:04.092"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.088" endtime="20221213 14:11:04.092"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be incremented to ${scan_level}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.092" endtime="20221213 14:11:04.092"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.077" endtime="20221213 14:11:04.092"/>
</kw>
<kw name="Verify Scan Profile Increment Queue">
<arg>${REF_IPADDR}</arg>
<arg>${2}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.093" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.093" endtime="20221213 14:11:04.093"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.103" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.103" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '406', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":226,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.103" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.093" endtime="20221213 14:11:04.103"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.103" endtime="20221213 14:11:04.103"/>
</return>
<msg timestamp="20221213 14:11:04.104" level="INFO">${messages} = [{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostna...</msg>
<status status="PASS" starttime="20221213 14:11:04.093" endtime="20221213 14:11:04.104"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostnam...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.105" level="INFO">${payload} = {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:04.104" endtime="20221213 14:11:04.105"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.106" endtime="20221213 14:11:04.106"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.106" endtime="20221213 14:11:04.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.106" endtime="20221213 14:11:04.106"/>
</kw>
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.106" endtime="20221213 14:11:04.106"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.106" endtime="20221213 14:11:04.106"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.105" endtime="20221213 14:11:04.106"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.104" endtime="20221213 14:11:04.106"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 185, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "IPAddre...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.107" level="INFO">${payload} = {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:04.106" endtime="20221213 14:11:04.107"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.107" endtime="20221213 14:11:04.108"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.108" level="INFO">@{reference_parts} = [ IPAddressV4 | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:04.108" endtime="20221213 14:11:04.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.108" endtime="20221213 14:11:04.109"/>
</kw>
<return>
<status status="PASS" starttime="20221213 14:11:04.109" endtime="20221213 14:11:04.109"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.107" endtime="20221213 14:11:04.109"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.107" endtime="20221213 14:11:04.109"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.106" endtime="20221213 14:11:04.109"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.104" endtime="20221213 14:11:04.109"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be incremented to ${scan_level}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.109" endtime="20221213 14:11:04.109"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.092" endtime="20221213 14:11:04.109"/>
</kw>
<kw name="Verify Scan Profile Increment Queue">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${4}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.110" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.110" endtime="20221213 14:11:04.111"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.120" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.120" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '406', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":226,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.120" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.111" endtime="20221213 14:11:04.120"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.120" endtime="20221213 14:11:04.120"/>
</return>
<msg timestamp="20221213 14:11:04.121" level="INFO">${messages} = [{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostna...</msg>
<status status="PASS" starttime="20221213 14:11:04.110" endtime="20221213 14:11:04.121"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 184, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostnam...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.122" level="INFO">${payload} = {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 4, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:04.121" endtime="20221213 14:11:04.122"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.123" endtime="20221213 14:11:04.123"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.123" endtime="20221213 14:11:04.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.123" endtime="20221213 14:11:04.123"/>
</kw>
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.123" endtime="20221213 14:11:04.123"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.123" endtime="20221213 14:11:04.123"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.122" endtime="20221213 14:11:04.123"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.121" endtime="20221213 14:11:04.123"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 185, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "IPAddre...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.124" level="INFO">${payload} = {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 2, 'scan_profile_type': 'declared'}}</msg>
<status status="PASS" starttime="20221213 14:11:04.123" endtime="20221213 14:11:04.124"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.124" endtime="20221213 14:11:04.124"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.124" endtime="20221213 14:11:04.124"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.125" endtime="20221213 14:11:04.125"/>
</kw>
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.125" endtime="20221213 14:11:04.125"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.124" endtime="20221213 14:11:04.125"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.124" endtime="20221213 14:11:04.125"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.123" endtime="20221213 14:11:04.125"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 226, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 2, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Hostnam...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.125" level="INFO">${payload} = {'primary_key': 'HostnameHTTPURL|http|internet|example.com|80|/', 'object_type': 'HostnameHTTPURL', 'scan_profile': {'reference': 'HostnameHTTPURL|http|internet|example.com|80|/', 'level': 4, 'scan_pr...</msg>
<status status="PASS" starttime="20221213 14:11:04.125" endtime="20221213 14:11:04.125"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.126" endtime="20221213 14:11:04.126"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.126" endtime="20221213 14:11:04.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.126" endtime="20221213 14:11:04.126"/>
</kw>
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.126" endtime="20221213 14:11:04.126"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.126" endtime="20221213 14:11:04.126"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.125" endtime="20221213 14:11:04.126"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.125" endtime="20221213 14:11:04.126"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 243, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_increments', 'message_count': 1, 'properties': {'delivery_mode': 2}, 'payload': '{"primary_key": "Resolve...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.127" level="INFO">${payload} = {'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'object_type': 'ResolvedHostname', 'scan_profile': {'reference': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'le...</msg>
<status status="PASS" starttime="20221213 14:11:04.126" endtime="20221213 14:11:04.127"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the increment queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.128" endtime="20221213 14:11:04.128"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.128" level="INFO">@{reference_parts} = [ ResolvedHostname | internet | example.com | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:04.128" endtime="20221213 14:11:04.129"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.129" endtime="20221213 14:11:04.129"/>
</kw>
<return>
<status status="PASS" starttime="20221213 14:11:04.129" endtime="20221213 14:11:04.129"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.127" endtime="20221213 14:11:04.129"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.127" endtime="20221213 14:11:04.129"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.126" endtime="20221213 14:11:04.129"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.121" endtime="20221213 14:11:04.129"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be incremented to ${scan_level}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.129" endtime="20221213 14:11:04.129"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.109" endtime="20221213 14:11:04.129"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_HOSTNAME}</arg>
<arg>${{[4, 0]}}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.131" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.131" endtime="20221213 14:11:04.131"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.141" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.141" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '542', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":266,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":8,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":266,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":7,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":325,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":6,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":350,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":268,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.141" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.131" endtime="20221213 14:11:04.141"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.141" endtime="20221213 14:11:04.141"/>
</return>
<msg timestamp="20221213 14:11:04.142" level="INFO">${messages} = [{'payload_bytes': 266, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 8, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create",...</msg>
<status status="PASS" starttime="20221213 14:11:04.130" endtime="20221213 14:11:04.142"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 266, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 8, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.143" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'Hostname|internet|example.com', 'value': {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|int...</msg>
<status status="PASS" starttime="20221213 14:11:04.142" endtime="20221213 14:11:04.143"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:04.144" level="INFO">${expected_scan_level} = 4</msg>
<status status="PASS" starttime="20221213 14:11:04.143" endtime="20221213 14:11:04.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.144" endtime="20221213 14:11:04.145"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.145" level="INFO">@{reference_parts} = [ Hostname | internet | example.com ]</msg>
<status status="PASS" starttime="20221213 14:11:04.145" endtime="20221213 14:11:04.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.145" endtime="20221213 14:11:04.146"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.146" endtime="20221213 14:11:04.146"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.146" endtime="20221213 14:11:04.146"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.146" endtime="20221213 14:11:04.146"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.143" endtime="20221213 14:11:04.146"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.143" endtime="20221213 14:11:04.146"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.142" endtime="20221213 14:11:04.146"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 266, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 7, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.147" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'value': {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4...</msg>
<status status="PASS" starttime="20221213 14:11:04.147" endtime="20221213 14:11:04.147"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.148" endtime="20221213 14:11:04.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.148" endtime="20221213 14:11:04.148"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.149" endtime="20221213 14:11:04.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.149" endtime="20221213 14:11:04.149"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.149" endtime="20221213 14:11:04.149"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.149" endtime="20221213 14:11:04.149"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.149" endtime="20221213 14:11:04.149"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.148" endtime="20221213 14:11:04.149"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.147" endtime="20221213 14:11:04.149"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.146" endtime="20221213 14:11:04.149"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 325, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 6, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.150" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'HostnameHTTPURL|http|internet|example.com|80|/', 'value': {'primary_key': 'HostnameHTTPURL|http|internet|example.com|80|/', 'object_type': 'HostnameHTTPURL', 's...</msg>
<status status="PASS" starttime="20221213 14:11:04.149" endtime="20221213 14:11:04.150"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.151"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.150" endtime="20221213 14:11:04.151"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.149" endtime="20221213 14:11:04.151"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 350, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.152" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'value': {'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'object_type': 'Reso...</msg>
<status status="PASS" starttime="20221213 14:11:04.152" endtime="20221213 14:11:04.152"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.153" endtime="20221213 14:11:04.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.153" endtime="20221213 14:11:04.153"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.153" endtime="20221213 14:11:04.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.154" endtime="20221213 14:11:04.154"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.154" endtime="20221213 14:11:04.154"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.154" endtime="20221213 14:11:04.154"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.154" endtime="20221213 14:11:04.154"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.153" endtime="20221213 14:11:04.154"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.153" endtime="20221213 14:11:04.154"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.151" endtime="20221213 14:11:04.154"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 268, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.155" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPPort|internet|1.1.1.1|tcp|80', 'value': {'primary_key': 'IPPort|internet|1.1.1.1|tcp|80', 'object_type': 'IPPort', 'scan_profile': {'reference': 'IPPort|inter...</msg>
<status status="PASS" starttime="20221213 14:11:04.154" endtime="20221213 14:11:04.155"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.155" endtime="20221213 14:11:04.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.156"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.156"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.156"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.156"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.156"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.155" endtime="20221213 14:11:04.156"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.155" endtime="20221213 14:11:04.156"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.154" endtime="20221213 14:11:04.156"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 267, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.157" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'URL|internet|http://example.com/', 'value': {'primary_key': 'URL|internet|http://example.com/', 'object_type': 'URL', 'scan_profile': {'reference': 'URL|interne...</msg>
<status status="PASS" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.157"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.158"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.158"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.158"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.158"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.158"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.157" endtime="20221213 14:11:04.158"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.157" endtime="20221213 14:11:04.158"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.156" endtime="20221213 14:11:04.158"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 263, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 2, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "update", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.159" level="INFO">${payload} = {'operation': 'update', 'primary_key': 'Hostname|internet|example.com', 'value': {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|int...</msg>
<status status="PASS" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.159"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:04.160" level="INFO">${expected_scan_level} = 0</msg>
<status status="PASS" starttime="20221213 14:11:04.160" endtime="20221213 14:11:04.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.160" endtime="20221213 14:11:04.161"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.161" level="INFO">@{reference_parts} = [ Hostname | internet | example.com ]</msg>
<status status="PASS" starttime="20221213 14:11:04.161" endtime="20221213 14:11:04.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.161" endtime="20221213 14:11:04.162"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="PASS" starttime="20221213 14:11:04.162" endtime="20221213 14:11:04.162"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.162" endtime="20221213 14:11:04.162"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.162" endtime="20221213 14:11:04.162"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.160" endtime="20221213 14:11:04.162"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.159" endtime="20221213 14:11:04.162"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.158" endtime="20221213 14:11:04.162"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.142" endtime="20221213 14:11:04.162"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be mutated to ${scan_levels}[0]</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.162" endtime="20221213 14:11:04.162"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.130" endtime="20221213 14:11:04.162"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_IPADDR}</arg>
<arg>${{[2]}}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.164" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.164" endtime="20221213 14:11:04.164"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.178" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.178" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '541', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":266,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":8,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":266,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":7,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":325,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":6,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":350,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":268,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.164" endtime="20221213 14:11:04.178"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.178" endtime="20221213 14:11:04.178"/>
</return>
<msg timestamp="20221213 14:11:04.179" level="INFO">${messages} = [{'payload_bytes': 266, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 8, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</msg>
<status status="PASS" starttime="20221213 14:11:04.163" endtime="20221213 14:11:04.179"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 266, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 8, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.180" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'Hostname|internet|example.com', 'value': {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|int...</msg>
<status status="PASS" starttime="20221213 14:11:04.179" endtime="20221213 14:11:04.180"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.181" endtime="20221213 14:11:04.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.181" endtime="20221213 14:11:04.181"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.181" endtime="20221213 14:11:04.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.181" endtime="20221213 14:11:04.182"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.182" endtime="20221213 14:11:04.182"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.182" endtime="20221213 14:11:04.182"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.182" endtime="20221213 14:11:04.182"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.181" endtime="20221213 14:11:04.182"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.180" endtime="20221213 14:11:04.182"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.179" endtime="20221213 14:11:04.182"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 266, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 7, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.183" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'value': {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4...</msg>
<status status="PASS" starttime="20221213 14:11:04.182" endtime="20221213 14:11:04.183"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:04.184" level="INFO">${expected_scan_level} = 2</msg>
<status status="PASS" starttime="20221213 14:11:04.184" endtime="20221213 14:11:04.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.184" endtime="20221213 14:11:04.185"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.185" level="INFO">@{reference_parts} = [ IPAddressV4 | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:04.185" endtime="20221213 14:11:04.185"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.185" endtime="20221213 14:11:04.186"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="PASS" starttime="20221213 14:11:04.186" endtime="20221213 14:11:04.186"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.186" endtime="20221213 14:11:04.186"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.186" endtime="20221213 14:11:04.186"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.184" endtime="20221213 14:11:04.186"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.183" endtime="20221213 14:11:04.186"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.182" endtime="20221213 14:11:04.186"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.179" endtime="20221213 14:11:04.186"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be mutated to ${scan_levels}[0]</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.186" endtime="20221213 14:11:04.187"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.162" endtime="20221213 14:11:04.187"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${{[4, 0]}}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.188" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.188" endtime="20221213 14:11:04.188"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.198" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.198" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '541', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":266,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":8,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":266,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":7,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":325,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":6,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":350,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":268,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.199" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.188" endtime="20221213 14:11:04.199"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.199" endtime="20221213 14:11:04.199"/>
</return>
<msg timestamp="20221213 14:11:04.200" level="INFO">${messages} = [{'payload_bytes': 266, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 8, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</msg>
<status status="PASS" starttime="20221213 14:11:04.187" endtime="20221213 14:11:04.200"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 266, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 8, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.201" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'Hostname|internet|example.com', 'value': {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|int...</msg>
<status status="PASS" starttime="20221213 14:11:04.200" endtime="20221213 14:11:04.201"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.202"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.202"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.202"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.202"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.202"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.202"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.201" endtime="20221213 14:11:04.202"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.201" endtime="20221213 14:11:04.202"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.200" endtime="20221213 14:11:04.202"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 266, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 7, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.203" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'value': {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4...</msg>
<status status="PASS" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.203"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.204"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.204"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.204"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.204"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.204"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.204"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.203" endtime="20221213 14:11:04.204"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.203" endtime="20221213 14:11:04.204"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.202" endtime="20221213 14:11:04.204"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 325, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 6, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.205" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'HostnameHTTPURL|http|internet|example.com|80|/', 'value': {'primary_key': 'HostnameHTTPURL|http|internet|example.com|80|/', 'object_type': 'HostnameHTTPURL', 's...</msg>
<status status="PASS" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.205"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.205" endtime="20221213 14:11:04.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.205" endtime="20221213 14:11:04.206"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.206" endtime="20221213 14:11:04.206"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.206" endtime="20221213 14:11:04.206"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.206" endtime="20221213 14:11:04.206"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.206" endtime="20221213 14:11:04.206"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.206" endtime="20221213 14:11:04.206"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.205" endtime="20221213 14:11:04.206"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.205" endtime="20221213 14:11:04.206"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.204" endtime="20221213 14:11:04.206"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 350, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.207" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'value': {'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'object_type': 'Reso...</msg>
<status status="PASS" starttime="20221213 14:11:04.206" endtime="20221213 14:11:04.207"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:04.208" level="INFO">${expected_scan_level} = 4</msg>
<status status="PASS" starttime="20221213 14:11:04.207" endtime="20221213 14:11:04.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.208" endtime="20221213 14:11:04.208"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.209" level="INFO">@{reference_parts} = [ ResolvedHostname | internet | example.com | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:04.208" endtime="20221213 14:11:04.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.209" endtime="20221213 14:11:04.209"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.209" endtime="20221213 14:11:04.209"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.209" endtime="20221213 14:11:04.210"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.209" endtime="20221213 14:11:04.210"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.207" endtime="20221213 14:11:04.210"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.207" endtime="20221213 14:11:04.210"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.206" endtime="20221213 14:11:04.210"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 268, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.210" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPPort|internet|1.1.1.1|tcp|80', 'value': {'primary_key': 'IPPort|internet|1.1.1.1|tcp|80', 'object_type': 'IPPort', 'scan_profile': {'reference': 'IPPort|inter...</msg>
<status status="PASS" starttime="20221213 14:11:04.210" endtime="20221213 14:11:04.210"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.211"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.211"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.211"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.211"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.211"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.211" endtime="20221213 14:11:04.212"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.210" endtime="20221213 14:11:04.212"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.210" endtime="20221213 14:11:04.212"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 267, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.212" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'URL|internet|http://example.com/', 'value': {'primary_key': 'URL|internet|http://example.com/', 'object_type': 'URL', 'scan_profile': {'reference': 'URL|interne...</msg>
<status status="PASS" starttime="20221213 14:11:04.212" endtime="20221213 14:11:04.212"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.213" endtime="20221213 14:11:04.213"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.212" endtime="20221213 14:11:04.213"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.212" endtime="20221213 14:11:04.213"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 263, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 2, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "update", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.214" level="INFO">${payload} = {'operation': 'update', 'primary_key': 'Hostname|internet|example.com', 'value': {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|int...</msg>
<status status="PASS" starttime="20221213 14:11:04.214" endtime="20221213 14:11:04.214"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.215"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.214" endtime="20221213 14:11:04.215"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.214" endtime="20221213 14:11:04.215"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 321, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 1, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "update", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.216" level="INFO">${payload} = {'operation': 'update', 'primary_key': 'HostnameHTTPURL|http|internet|example.com|80|/', 'value': {'primary_key': 'HostnameHTTPURL|http|internet|example.com|80|/', 'object_type': 'HostnameHTTPURL', 's...</msg>
<status status="PASS" starttime="20221213 14:11:04.216" endtime="20221213 14:11:04.216"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.217"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.216" endtime="20221213 14:11:04.217"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.215" endtime="20221213 14:11:04.217"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 346, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 0, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "update", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:04.218" level="INFO">${payload} = {'operation': 'update', 'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'value': {'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'object_type': 'Reso...</msg>
<status status="PASS" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.218"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:04.219" level="INFO">${expected_scan_level} = 0</msg>
<status status="PASS" starttime="20221213 14:11:04.219" endtime="20221213 14:11:04.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:04.219" endtime="20221213 14:11:04.219"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:04.220" level="INFO">@{reference_parts} = [ ResolvedHostname | internet | example.com | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:04.220" endtime="20221213 14:11:04.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:04.220" endtime="20221213 14:11:04.220"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="PASS" starttime="20221213 14:11:04.221" endtime="20221213 14:11:04.221"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.220" endtime="20221213 14:11:04.221"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.220" endtime="20221213 14:11:04.221"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.219" endtime="20221213 14:11:04.221"/>
</branch>
<status status="PASS" starttime="20221213 14:11:04.218" endtime="20221213 14:11:04.221"/>
</if>
<status status="PASS" starttime="20221213 14:11:04.217" endtime="20221213 14:11:04.221"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.200" endtime="20221213 14:11:04.221"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be mutated to ${scan_levels}[0]</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:04.221" endtime="20221213 14:11:04.221"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.187" endtime="20221213 14:11:04.221"/>
</kw>
<kw name="Teardown Test" type="TEARDOWN">
<kw name="Cleanup" library="robot">
<kw name="Clear XTDB" library="robot">
<kw name="Get All Document Ids" library="robot">
<var>${ids}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>{:query {:find [?e] :where [[?e :xt/id]]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:04.222" level="INFO">${query} = {:query {:find [?e] :where [[?e :xt/id]]}}</msg>
<status status="PASS" starttime="20221213 14:11:04.222" endtime="20221213 14:11:04.222"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/edn</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.223" level="INFO">${headers} = {'Content-Type': 'application/edn', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:04.222" endtime="20221213 14:11:04.223"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/query</arg>
<arg>data=${query}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.229" level="INFO">POST Request : url=http://localhost:29002/_xtdb/query 
 path_url=/_xtdb/query 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/edn', 'Content-Length': '42'} 
 body={:query {:find [?e] :where [[?e :xt/id]]}} 
 </msg>
<msg timestamp="20221213 14:11:04.229" level="INFO">POST Response : url=http://localhost:29002/_xtdb/query 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '2465', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body=[["HostnameHTTPURL|http|internet|example.com|80|/"],["Hostname|internet|example.com"],["IPAddressV4|internet|1.1.1.1"],["IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["Origin|inference|dns-alias-resolving|Hostname|internet|example.com"],["Origin|inference|dns-resolving|Hostname|internet|example.com"],["Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1"],["Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/"],["Origin|inference|internet-nl|Hostname|internet|example.com"],["Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com"],["Origin|inference|ipv6-webservers|Hostname|internet|example.com"],["Origin|inference|nxdomain-flag|Hostname|internet|example.com"],["Origin|inference|nxdomain-header-flag|Hostname|internet|example.com"],["Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80"],["Origin|inference|resource-discovery|Hostname|internet|example.com"],["Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com"],["Origin|inference|url-classification|URL|internet|http://example.com/"],["Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|observation|boefje_normalizer_x|Hostname|internet|example.com"],["ResolvedHostname|internet|example.com|internet|1.1.1.1"],["ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/"],["ScanProfile|Hostname|internet|example.com"],["ScanProfile|IPAddressV4|internet|1.1.1.1"],["ScanProfile|IPPort|internet|1.1.1.1|tcp|80"],["ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["ScanProfile|URL|internet|http://example.com/"],["URL|internet|http://example.com/"]] 
 </msg>
<msg timestamp="20221213 14:11:04.230" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.223" endtime="20221213 14:11:04.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rows}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:04.230" level="INFO">${rows} = [['HostnameHTTPURL|http|internet|example.com|80|/'], ['Hostname|internet|example.com'], ['IPAddressV4|internet|1.1.1.1'], ['IPPort|internet|1.1.1.1|tcp|80'], ['OriginParameter|Origin|inference|dns-ali...</msg>
<status status="PASS" starttime="20221213 14:11:04.230" endtime="20221213 14:11:04.231"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ids}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.231" level="INFO">${ids} = []</msg>
<status status="PASS" starttime="20221213 14:11:04.231" endtime="20221213 14:11:04.231"/>
</kw>
<for flavor="IN">
<var>${cols}</var>
<value>@{rows}</value>
<iter>
<var name="${cols}">['HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.231" endtime="20221213 14:11:04.232"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.231" endtime="20221213 14:11:04.232"/>
</iter>
<iter>
<var name="${cols}">['Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.232" endtime="20221213 14:11:04.232"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.232" endtime="20221213 14:11:04.232"/>
</iter>
<iter>
<var name="${cols}">['IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.233" endtime="20221213 14:11:04.233"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.232" endtime="20221213 14:11:04.233"/>
</iter>
<iter>
<var name="${cols}">['IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.233" endtime="20221213 14:11:04.234"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.233" endtime="20221213 14:11:04.234"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.234" endtime="20221213 14:11:04.235"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.234" endtime="20221213 14:11:04.235"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.235" endtime="20221213 14:11:04.236"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.235" endtime="20221213 14:11:04.236"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.236" endtime="20221213 14:11:04.236"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.236" endtime="20221213 14:11:04.236"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.237" endtime="20221213 14:11:04.237"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.236" endtime="20221213 14:11:04.237"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.237" endtime="20221213 14:11:04.238"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.237" endtime="20221213 14:11:04.238"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.238" endtime="20221213 14:11:04.239"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.238" endtime="20221213 14:11:04.239"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-alias-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.239" endtime="20221213 14:11:04.240"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.239" endtime="20221213 14:11:04.240"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.240" endtime="20221213 14:11:04.240"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.240" endtime="20221213 14:11:04.240"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.240" endtime="20221213 14:11:04.241"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.240" endtime="20221213 14:11:04.241"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.241" endtime="20221213 14:11:04.242"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.241" endtime="20221213 14:11:04.242"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|internet-nl|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.242" endtime="20221213 14:11:04.243"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.242" endtime="20221213 14:11:04.243"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.243" endtime="20221213 14:11:04.243"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.243" endtime="20221213 14:11:04.243"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-webservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.243" endtime="20221213 14:11:04.244"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.243" endtime="20221213 14:11:04.244"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.244" endtime="20221213 14:11:04.245"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.244" endtime="20221213 14:11:04.245"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-header-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.245" endtime="20221213 14:11:04.245"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.245" endtime="20221213 14:11:04.245"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.246" endtime="20221213 14:11:04.246"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.245" endtime="20221213 14:11:04.246"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|resource-discovery|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.246" endtime="20221213 14:11:04.247"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.246" endtime="20221213 14:11:04.247"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.247" endtime="20221213 14:11:04.247"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.247" endtime="20221213 14:11:04.248"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-classification|URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.248" endtime="20221213 14:11:04.248"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.248" endtime="20221213 14:11:04.248"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.248" endtime="20221213 14:11:04.249"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.248" endtime="20221213 14:11:04.249"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.249" endtime="20221213 14:11:04.250"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.249" endtime="20221213 14:11:04.250"/>
</iter>
<iter>
<var name="${cols}">['Origin|observation|boefje_normalizer_x|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.250" endtime="20221213 14:11:04.250"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.250" endtime="20221213 14:11:04.250"/>
</iter>
<iter>
<var name="${cols}">['ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.251" endtime="20221213 14:11:04.251"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.251" endtime="20221213 14:11:04.251"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.251" endtime="20221213 14:11:04.252"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.251" endtime="20221213 14:11:04.252"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.252" endtime="20221213 14:11:04.253"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.252" endtime="20221213 14:11:04.253"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.253" endtime="20221213 14:11:04.253"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.253" endtime="20221213 14:11:04.253"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.253" endtime="20221213 14:11:04.254"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.253" endtime="20221213 14:11:04.254"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.254" endtime="20221213 14:11:04.255"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.254" endtime="20221213 14:11:04.255"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.255" endtime="20221213 14:11:04.255"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.255" endtime="20221213 14:11:04.255"/>
</iter>
<iter>
<var name="${cols}">['URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.256" endtime="20221213 14:11:04.256"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.256" endtime="20221213 14:11:04.256"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.231" endtime="20221213 14:11:04.256"/>
</for>
<return>
<value>${ids}</value>
<status status="PASS" starttime="20221213 14:11:04.256" endtime="20221213 14:11:04.256"/>
</return>
<msg timestamp="20221213 14:11:04.256" level="INFO">${ids} = ['HostnameHTTPURL|http|internet|example.com|80|/', 'Hostname|internet|example.com', 'IPAddressV4|internet|1.1.1.1', 'IPPort|internet|1.1.1.1|tcp|80', 'OriginParameter|Origin|inference|dns-alias-resolv...</msg>
<status status="PASS" starttime="20221213 14:11:04.222" endtime="20221213 14:11:04.257"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${operations}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.257" level="INFO">${operations} = []</msg>
<status status="PASS" starttime="20221213 14:11:04.257" endtime="20221213 14:11:04.257"/>
</kw>
<for flavor="IN">
<var>${id}</var>
<value>@{ids}</value>
<iter>
<var name="${id}">HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.257" level="INFO">${operation} = ['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.257" endtime="20221213 14:11:04.257"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.257" endtime="20221213 14:11:04.257"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.257" endtime="20221213 14:11:04.257"/>
</iter>
<iter>
<var name="${id}">Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.258" level="INFO">${operation} = ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.258" endtime="20221213 14:11:04.258"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.258" endtime="20221213 14:11:04.258"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.257" endtime="20221213 14:11:04.258"/>
</iter>
<iter>
<var name="${id}">IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.258" level="INFO">${operation} = ['evict', 'IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.258" endtime="20221213 14:11:04.258"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.258" endtime="20221213 14:11:04.259"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.258" endtime="20221213 14:11:04.259"/>
</iter>
<iter>
<var name="${id}">IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.259" level="INFO">${operation} = ['evict', 'IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.259" endtime="20221213 14:11:04.259"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.259" endtime="20221213 14:11:04.259"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.259" endtime="20221213 14:11:04.259"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.260" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.259" endtime="20221213 14:11:04.260"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.260" endtime="20221213 14:11:04.260"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.259" endtime="20221213 14:11:04.260"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.260" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.260" endtime="20221213 14:11:04.260"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.260" endtime="20221213 14:11:04.260"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.260" endtime="20221213 14:11:04.260"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.261" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.261" endtime="20221213 14:11:04.261"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.261" endtime="20221213 14:11:04.261"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.260" endtime="20221213 14:11:04.261"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.261" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.261" endtime="20221213 14:11:04.262"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.262" endtime="20221213 14:11:04.262"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.261" endtime="20221213 14:11:04.262"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.262" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.262" endtime="20221213 14:11:04.262"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.262" endtime="20221213 14:11:04.262"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.262" endtime="20221213 14:11:04.262"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.263" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.262" endtime="20221213 14:11:04.263"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.263" endtime="20221213 14:11:04.263"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.262" endtime="20221213 14:11:04.263"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-alias-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.263" level="INFO">${operation} = ['evict', 'Origin|inference|dns-alias-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.263" endtime="20221213 14:11:04.263"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.263" endtime="20221213 14:11:04.264"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.263" endtime="20221213 14:11:04.264"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.264" level="INFO">${operation} = ['evict', 'Origin|inference|dns-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.264" endtime="20221213 14:11:04.264"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.264" endtime="20221213 14:11:04.264"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.264" endtime="20221213 14:11:04.264"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.264" level="INFO">${operation} = ['evict', 'Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.264" endtime="20221213 14:11:04.265"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.265" endtime="20221213 14:11:04.265"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.264" endtime="20221213 14:11:04.265"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.265" level="INFO">${operation} = ['evict', 'Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.265" endtime="20221213 14:11:04.265"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.265" endtime="20221213 14:11:04.265"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.265" endtime="20221213 14:11:04.265"/>
</iter>
<iter>
<var name="${id}">Origin|inference|internet-nl|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.266" level="INFO">${operation} = ['evict', 'Origin|inference|internet-nl|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.266" endtime="20221213 14:11:04.266"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.266" endtime="20221213 14:11:04.266"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.265" endtime="20221213 14:11:04.266"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.266" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.266" endtime="20221213 14:11:04.266"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.266" endtime="20221213 14:11:04.267"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.266" endtime="20221213 14:11:04.267"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-webservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.267" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-webservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.267" endtime="20221213 14:11:04.267"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.267" endtime="20221213 14:11:04.267"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.267" endtime="20221213 14:11:04.267"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.267" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.267" endtime="20221213 14:11:04.268"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.268" endtime="20221213 14:11:04.268"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.267" endtime="20221213 14:11:04.268"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-header-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.268" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-header-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.268" endtime="20221213 14:11:04.268"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.268" endtime="20221213 14:11:04.268"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.268" endtime="20221213 14:11:04.268"/>
</iter>
<iter>
<var name="${id}">Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.269" level="INFO">${operation} = ['evict', 'Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.268" endtime="20221213 14:11:04.269"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.269" endtime="20221213 14:11:04.269"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.268" endtime="20221213 14:11:04.269"/>
</iter>
<iter>
<var name="${id}">Origin|inference|resource-discovery|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.269" level="INFO">${operation} = ['evict', 'Origin|inference|resource-discovery|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.269" endtime="20221213 14:11:04.269"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.269" endtime="20221213 14:11:04.270"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.269" endtime="20221213 14:11:04.270"/>
</iter>
<iter>
<var name="${id}">Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.270" level="INFO">${operation} = ['evict', 'Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.270" endtime="20221213 14:11:04.270"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.270" endtime="20221213 14:11:04.270"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.270" endtime="20221213 14:11:04.270"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-classification|URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.270" level="INFO">${operation} = ['evict', 'Origin|inference|url-classification|URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.270" endtime="20221213 14:11:04.271"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.271" endtime="20221213 14:11:04.271"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.270" endtime="20221213 14:11:04.271"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.271" level="INFO">${operation} = ['evict', 'Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.271" endtime="20221213 14:11:04.271"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.271" endtime="20221213 14:11:04.271"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.271" endtime="20221213 14:11:04.271"/>
</iter>
<iter>
<var name="${id}">Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.272" level="INFO">${operation} = ['evict', 'Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.272" endtime="20221213 14:11:04.272"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.272" endtime="20221213 14:11:04.272"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.272" endtime="20221213 14:11:04.272"/>
</iter>
<iter>
<var name="${id}">Origin|observation|boefje_normalizer_x|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.272" level="INFO">${operation} = ['evict', 'Origin|observation|boefje_normalizer_x|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.272" endtime="20221213 14:11:04.272"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.272" endtime="20221213 14:11:04.273"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.272" endtime="20221213 14:11:04.273"/>
</iter>
<iter>
<var name="${id}">ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.273" level="INFO">${operation} = ['evict', 'ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.273" endtime="20221213 14:11:04.273"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.273" endtime="20221213 14:11:04.273"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.273" endtime="20221213 14:11:04.273"/>
</iter>
<iter>
<var name="${id}">ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.274" level="INFO">${operation} = ['evict', 'ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.273" endtime="20221213 14:11:04.274"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.274" endtime="20221213 14:11:04.274"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.273" endtime="20221213 14:11:04.274"/>
</iter>
<iter>
<var name="${id}">ScanProfile|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.274" level="INFO">${operation} = ['evict', 'ScanProfile|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.274" endtime="20221213 14:11:04.274"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.274" endtime="20221213 14:11:04.274"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.274" endtime="20221213 14:11:04.274"/>
</iter>
<iter>
<var name="${id}">ScanProfile|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.275" level="INFO">${operation} = ['evict', 'ScanProfile|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.275" endtime="20221213 14:11:04.275"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.275" endtime="20221213 14:11:04.275"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.274" endtime="20221213 14:11:04.275"/>
</iter>
<iter>
<var name="${id}">ScanProfile|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.275" level="INFO">${operation} = ['evict', 'ScanProfile|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.275" endtime="20221213 14:11:04.275"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.275" endtime="20221213 14:11:04.276"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.275" endtime="20221213 14:11:04.276"/>
</iter>
<iter>
<var name="${id}">ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.276" level="INFO">${operation} = ['evict', 'ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.276" endtime="20221213 14:11:04.276"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.276" endtime="20221213 14:11:04.276"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.276" endtime="20221213 14:11:04.276"/>
</iter>
<iter>
<var name="${id}">ScanProfile|URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.277" level="INFO">${operation} = ['evict', 'ScanProfile|URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.276" endtime="20221213 14:11:04.277"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.277" endtime="20221213 14:11:04.277"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.276" endtime="20221213 14:11:04.277"/>
</iter>
<iter>
<var name="${id}">URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:04.277" level="INFO">${operation} = ['evict', 'URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:04.277" endtime="20221213 14:11:04.277"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:04.277" endtime="20221213 14:11:04.277"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.277" endtime="20221213 14:11:04.277"/>
</iter>
<status status="PASS" starttime="20221213 14:11:04.257" endtime="20221213 14:11:04.277"/>
</for>
<kw name="Create Dictionary" library="BuiltIn">
<var>${transaction}</var>
<arg>tx-ops=${operations}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.278" level="INFO">${transaction} = {'tx-ops': [['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00'], ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00'], ['evict', 'IPAddressV4|in...</msg>
<status status="PASS" starttime="20221213 14:11:04.278" endtime="20221213 14:11:04.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.278" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:04.278" endtime="20221213 14:11:04.278"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/submit-tx</arg>
<arg>json=${transaction}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.285" level="INFO">POST Request : url=http://localhost:29002/_xtdb/submit-tx 
 path_url=/_xtdb/submit-tx 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '3802'} 
 body=b'{"tx-ops": [["evict", "HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-alias-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|internet-nl|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-webservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-header-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|resource-discovery|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-classification|URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|observation|boefje_normalizer_x|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"], ["evict", "URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"]]}' 
 </msg>
<msg timestamp="20221213 14:11:04.285" level="INFO">POST Response : url=http://localhost:29002/_xtdb/submit-tx 
 status=202, reason=Accepted 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:04 GMT', 'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '43', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={"txId":84,"txTime":"2022-12-13T13:11:04Z"} 
 </msg>
<msg timestamp="20221213 14:11:04.285" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.278" endtime="20221213 14:11:04.285"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:04.306" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:04.306" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:04 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:04.293-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:04.306" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.286" endtime="20221213 14:11:04.306"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.285" endtime="20221213 14:11:04.307"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.222" endtime="20221213 14:11:04.307"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:04.311" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:04.311" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:04 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:04.293-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:04.311" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.307" endtime="20221213 14:11:04.311"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.307" endtime="20221213 14:11:04.311"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>octopoes</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.312" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.312" endtime="20221213 14:11:04.312"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.320" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 path_url=/api/queues/kat/octopoes/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.320" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:04.320" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.312" endtime="20221213 14:11:04.320"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.320" endtime="20221213 14:11:04.320"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.311" endtime="20221213 14:11:04.321"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.322" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.321" endtime="20221213 14:11:04.322"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.331" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.331" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '406', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":184,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}","payload_encoding":"string"},{"payload_bytes":226,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":243,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"},{"payload_bytes":185,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_increments","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.322" endtime="20221213 14:11:04.332"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.332" endtime="20221213 14:11:04.332"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.321" endtime="20221213 14:11:04.332"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:04.333" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:04.333" endtime="20221213 14:11:04.333"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.343" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:04.343" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '541', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":266,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":8,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 4, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":266,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":7,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 2, \"scan_profile_type\": \"declared\"}}}","payload_encoding":"string"},{"payload_bytes":325,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":6,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":350,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 4, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":268,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 2, \"scan_profile_type\": \"inherited\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"update\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:04.343" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.333" endtime="20221213 14:11:04.343"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:04.343" endtime="20221213 14:11:04.343"/>
</return>
<status status="PASS" starttime="20221213 14:11:04.332" endtime="20221213 14:11:04.344"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.222" endtime="20221213 14:11:04.344"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.345" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:04.346" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:04.345" endtime="20221213 14:11:04.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.346" endtime="20221213 14:11:04.346"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.345" endtime="20221213 14:11:04.346"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.345" endtime="20221213 14:11:04.346"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.347" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:04.347" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:04.347" endtime="20221213 14:11:04.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.347" endtime="20221213 14:11:04.347"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.346" endtime="20221213 14:11:04.347"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.346" endtime="20221213 14:11:04.347"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.348" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:04.348" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:04.348" endtime="20221213 14:11:04.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.348" endtime="20221213 14:11:04.348"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.348" endtime="20221213 14:11:04.349"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.347" endtime="20221213 14:11:04.349"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.344" endtime="20221213 14:11:04.349"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:04.354" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:04.354" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:04 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:04.293-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:04.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.349" endtime="20221213 14:11:04.354"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.349" endtime="20221213 14:11:04.354"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.344" endtime="20221213 14:11:04.354"/>
</kw>
<kw name="Stop Monitoring" library="CeleryMonitor">
<status status="PASS" starttime="20221213 14:11:04.355" endtime="20221213 14:11:04.355"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.221" endtime="20221213 14:11:04.355"/>
</kw>
<status status="PASS" starttime="20221213 14:11:02.459" endtime="20221213 14:11:04.355"/>
</test>
<test id="s1-s1-t3" name="Empty Scan Profiles" line="52">
<kw name="Setup Test" type="SETUP">
<kw name="Start Monitoring" library="CeleryMonitor">
<arg>${QUEUE_URI}</arg>
<msg timestamp="20221213 14:11:04.356" level="INFO">Started monitoring</msg>
<status status="PASS" starttime="20221213 14:11:04.356" endtime="20221213 14:11:04.356"/>
</kw>
<kw name="Insert Normalizer Output" library="robot">
<kw name="Insert Origin" library="robot">
<arg>tests/fixtures/normalizer_output.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${norm_output_json}</var>
<arg>${origin_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20221213 14:11:04.358" level="INFO" html="true">Getting file '&lt;a href="file:///Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json"&gt;/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json&lt;/a&gt;'.</msg>
<msg timestamp="20221213 14:11:04.358" level="INFO">${norm_output_json} = {
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",...</msg>
<status status="PASS" starttime="20221213 14:11:04.357" endtime="20221213 14:11:04.358"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/observations</arg>
<arg>${norm_output_json}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:04.432" level="INFO">POST Request : url=http://localhost:29000/_dev/observations 
 path_url=/_dev/observations 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '759'} 
 body={
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",
      "fqdn": "Hostname|internet|example.com."
    },
    {
      "object_type": "ResolvedHostname",
      "hostname": "Hostname|internet|example.com",
      "address": "IPAddressV4|internet|1.1.1.1"
    },
    {
      "object_type": "IPAddressV4",
      "network": "Network|internet",
      "address": "1.1.1.1"
    },
    {
        "object_type": "IPPort",
        "address": "IPAddressV4|internet|1.1.1.1",
        "protocol": "tcp",
        "port": 80,
        "state": "open"
    }
  ],
  "valid_time": "2019-01-01T00:00:00+00:00",
  "task_id": "1234"
} 
 </msg>
<msg timestamp="20221213 14:11:04.432" level="INFO">POST Response : url=http://localhost:29000/_dev/observations 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:03 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:04.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.358" endtime="20221213 14:11:04.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.433" endtime="20221213 14:11:04.433"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.357" endtime="20221213 14:11:04.434"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.357" endtime="20221213 14:11:04.434"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.435" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:04.435" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:04.435" endtime="20221213 14:11:04.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.435" endtime="20221213 14:11:04.436"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.435" endtime="20221213 14:11:04.436"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.434" endtime="20221213 14:11:04.436"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.437" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:04.437" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:04.437" endtime="20221213 14:11:04.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:04.437" endtime="20221213 14:11:04.437"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.436" endtime="20221213 14:11:04.438"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.436" endtime="20221213 14:11:04.438"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.439" level="INFO">Counting tasks of type task-started: 4</msg>
<msg timestamp="20221213 14:11:04.439" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20221213 14:11:04.438" endtime="20221213 14:11:04.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:04.439" level="FAIL">4 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:04.439" endtime="20221213 14:11:04.439"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:04.438" endtime="20221213 14:11:04.439"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.542" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:04.542" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:04.542" endtime="20221213 14:11:04.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:04.543" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:04.543" endtime="20221213 14:11:04.543"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:04.541" endtime="20221213 14:11:04.543"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.646" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:04.646" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:04.646" endtime="20221213 14:11:04.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:04.647" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:04.646" endtime="20221213 14:11:04.647"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:04.645" endtime="20221213 14:11:04.647"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.750" level="INFO">Counting tasks of type task-started: 5</msg>
<msg timestamp="20221213 14:11:04.750" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20221213 14:11:04.749" endtime="20221213 14:11:04.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:04.751" level="FAIL">5 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:04.750" endtime="20221213 14:11:04.751"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:04.748" endtime="20221213 14:11:04.751"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.852" level="INFO">Counting tasks of type task-started: 1</msg>
<msg timestamp="20221213 14:11:04.852" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:04.852" endtime="20221213 14:11:04.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:04.853" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:04.852" endtime="20221213 14:11:04.853"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:04.852" endtime="20221213 14:11:04.853"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:04.954" level="INFO">Counting tasks of type task-started: 2</msg>
<msg timestamp="20221213 14:11:04.954" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20221213 14:11:04.954" endtime="20221213 14:11:04.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:04.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:04.955" level="FAIL">2 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:04.954" endtime="20221213 14:11:04.955"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:04.953" endtime="20221213 14:11:04.955"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.057" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:05.057" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.057" endtime="20221213 14:11:05.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.058" endtime="20221213 14:11:05.058"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.056" endtime="20221213 14:11:05.058"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.438" endtime="20221213 14:11:05.058"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.434" endtime="20221213 14:11:05.058"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.065" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.065" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:04 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:04.938-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:05.065" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.059" endtime="20221213 14:11:05.065"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.058" endtime="20221213 14:11:05.065"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.434" endtime="20221213 14:11:05.065"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.355" endtime="20221213 14:11:05.065"/>
</kw>
<kw name="Recalculate Scan Profiles">
<kw name="Get Valid Time Params" library="robot">
<var>${params}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${valid_time_params}</var>
<arg>valid_time=${VALID_TIME}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.066" level="INFO">${valid_time_params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:05.066" endtime="20221213 14:11:05.066"/>
</kw>
<return>
<value>${valid_time_params}</value>
<status status="PASS" starttime="20221213 14:11:05.066" endtime="20221213 14:11:05.066"/>
</return>
<msg timestamp="20221213 14:11:05.067" level="INFO">${params} = {'valid_time': '2022-01-01T00:00:00+00:00'}</msg>
<status status="PASS" starttime="20221213 14:11:05.066" endtime="20221213 14:11:05.067"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/scan_profiles/recalculate</arg>
<arg>params=${params}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.137" level="INFO">GET Request : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 path_url=/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.137" level="INFO">GET Response : url=http://localhost:29000/_dev/scan_profiles/recalculate?valid_time=2022-01-01T00%3A00%3A00%2B00%3A00 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:04 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:05.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.067" endtime="20221213 14:11:05.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.138" endtime="20221213 14:11:05.139"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.140" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:05.140" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.140" endtime="20221213 14:11:05.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.140" endtime="20221213 14:11:05.141"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.140" endtime="20221213 14:11:05.141"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.139" endtime="20221213 14:11:05.141"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.142" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:05.142" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.142" endtime="20221213 14:11:05.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.142" endtime="20221213 14:11:05.142"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.141" endtime="20221213 14:11:05.142"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.141" endtime="20221213 14:11:05.142"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.143" level="INFO">Counting tasks of type task-started: 5</msg>
<msg timestamp="20221213 14:11:05.143" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20221213 14:11:05.143" endtime="20221213 14:11:05.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:05.144" level="FAIL">5 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:05.144" endtime="20221213 14:11:05.144"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:05.143" endtime="20221213 14:11:05.144"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.245" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:05.245" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.245" endtime="20221213 14:11:05.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.245" endtime="20221213 14:11:05.246"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.245" endtime="20221213 14:11:05.246"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.143" endtime="20221213 14:11:05.246"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.139" endtime="20221213 14:11:05.246"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.252" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.252" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:05 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:05.117-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:05.252" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.246" endtime="20221213 14:11:05.252"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.246" endtime="20221213 14:11:05.252"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.139" endtime="20221213 14:11:05.252"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.065" endtime="20221213 14:11:05.252"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_HOSTNAME}</arg>
<arg>${0}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.278" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 path_url=/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.278" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=Hostname%7Cinternet%7Cexample.com 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:04 GMT', 'server': 'uvicorn', 'content-length': '277', 'content-type': 'application/json'} 
 body={"object_type":"Hostname","scan_profile":{"reference":"Hostname|internet|example.com","level":0,"scan_profile_type":"empty"},"primary_key":"Hostname|internet|example.com","network":"Network|internet","name":"example.com","fqdn":"Hostname|internet|example.com.","dns_zone":null} 
 </msg>
<msg timestamp="20221213 14:11:05.278" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.253" endtime="20221213 14:11:05.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.279" endtime="20221213 14:11:05.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.280" endtime="20221213 14:11:05.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:05.281" level="INFO">${response_data} = {'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'Hostname|internet|example.com', 'network': 'Networ...</msg>
<status status="PASS" starttime="20221213 14:11:05.280" endtime="20221213 14:11:05.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.281" endtime="20221213 14:11:05.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:05.282" endtime="20221213 14:11:05.283"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.252" endtime="20221213 14:11:05.283"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_IPADDR}</arg>
<arg>${0}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.308" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 path_url=/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.308" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=IPAddressV4%7Cinternet%7C1.1.1.1 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:04 GMT', 'server': 'uvicorn', 'content-length': '221', 'content-type': 'application/json'} 
 body={"object_type":"IPAddressV4","scan_profile":{"reference":"IPAddressV4|internet|1.1.1.1","level":0,"scan_profile_type":"empty"},"primary_key":"IPAddressV4|internet|1.1.1.1","address":"1.1.1.1","network":"Network|internet"} 
 </msg>
<msg timestamp="20221213 14:11:05.308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.284" endtime="20221213 14:11:05.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.308" endtime="20221213 14:11:05.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.309" endtime="20221213 14:11:05.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:05.310" level="INFO">${response_data} = {'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4|internet|1.1.1.1', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'address': '1.1.1...</msg>
<status status="PASS" starttime="20221213 14:11:05.310" endtime="20221213 14:11:05.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.310" endtime="20221213 14:11:05.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:05.311" endtime="20221213 14:11:05.312"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.283" endtime="20221213 14:11:05.312"/>
</kw>
<kw name="Verify Scan Level">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${0}</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/object</arg>
<arg>params=reference=${reference}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.337" level="INFO">GET Request : url=http://localhost:29000/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 path_url=/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.337" level="INFO">GET Response : url=http://localhost:29000/_dev/object?reference=ResolvedHostname%7Cinternet%7Cexample.com%7Cinternet%7C1.1.1.1 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:04 GMT', 'server': 'uvicorn', 'content-length': '313', 'content-type': 'application/json'} 
 body={"object_type":"ResolvedHostname","scan_profile":{"reference":"ResolvedHostname|internet|example.com|internet|1.1.1.1","level":0,"scan_profile_type":"empty"},"primary_key":"ResolvedHostname|internet|example.com|internet|1.1.1.1","hostname":"Hostname|internet|example.com","address":"IPAddressV4|internet|1.1.1.1"} 
 </msg>
<msg timestamp="20221213 14:11:05.338" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.313" endtime="20221213 14:11:05.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.338" endtime="20221213 14:11:05.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.339" endtime="20221213 14:11:05.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:05.340" level="INFO">${response_data} = {'object_type': 'ResolvedHostname', 'scan_profile': {'reference': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'ResolvedHostname|...</msg>
<status status="PASS" starttime="20221213 14:11:05.340" endtime="20221213 14:11:05.340"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["primary_key"]}</arg>
<arg>${reference}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.340" endtime="20221213 14:11:05.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response_data["scan_profile"]["level"]}</arg>
<arg>${scan_level}</arg>
<arg>Scan Level of ${reference} should be ${scan_level} in the database</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:05.341" endtime="20221213 14:11:05.342"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.312" endtime="20221213 14:11:05.342"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_HOSTNAME}</arg>
<arg>${{[0]}}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.343" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:05.343" endtime="20221213 14:11:05.344"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.354" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:05.354" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '463', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:04 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":263,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":264,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":false,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:05.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.344" endtime="20221213 14:11:05.354"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:05.354" endtime="20221213 14:11:05.354"/>
</return>
<msg timestamp="20221213 14:11:05.355" level="INFO">${messages} = [{'payload_bytes': 263, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create",...</msg>
<status status="PASS" starttime="20221213 14:11:05.343" endtime="20221213 14:11:05.355"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 263, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:05.356" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'value': {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4...</msg>
<status status="PASS" starttime="20221213 14:11:05.356" endtime="20221213 14:11:05.356"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.357" endtime="20221213 14:11:05.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.357" endtime="20221213 14:11:05.357"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.357" endtime="20221213 14:11:05.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.358" endtime="20221213 14:11:05.358"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:05.358" endtime="20221213 14:11:05.358"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:05.358" endtime="20221213 14:11:05.358"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:05.358" endtime="20221213 14:11:05.358"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:05.357" endtime="20221213 14:11:05.358"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.356" endtime="20221213 14:11:05.358"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.355" endtime="20221213 14:11:05.358"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 263, 'redelivered': False, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:05.359" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'Hostname|internet|example.com', 'value': {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|int...</msg>
<status status="PASS" starttime="20221213 14:11:05.358" endtime="20221213 14:11:05.359"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:05.360" level="INFO">${expected_scan_level} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.359" endtime="20221213 14:11:05.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:05.360" endtime="20221213 14:11:05.360"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:05.361" level="INFO">@{reference_parts} = [ Hostname | internet | example.com ]</msg>
<status status="PASS" starttime="20221213 14:11:05.361" endtime="20221213 14:11:05.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.361" endtime="20221213 14:11:05.361"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="PASS" starttime="20221213 14:11:05.362" endtime="20221213 14:11:05.362"/>
</return>
<status status="PASS" starttime="20221213 14:11:05.362" endtime="20221213 14:11:05.362"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.362" endtime="20221213 14:11:05.362"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.359" endtime="20221213 14:11:05.362"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.359" endtime="20221213 14:11:05.362"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.358" endtime="20221213 14:11:05.362"/>
</iter>
<status status="PASS" starttime="20221213 14:11:05.355" endtime="20221213 14:11:05.362"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be mutated to ${scan_levels}[0]</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.362" endtime="20221213 14:11:05.362"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.342" endtime="20221213 14:11:05.362"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_IPADDR}</arg>
<arg>${{[0]}}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.364" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:05.363" endtime="20221213 14:11:05.364"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.372" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:05.372" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '462', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:04 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":264,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:05.372" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.364" endtime="20221213 14:11:05.372"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:05.372" endtime="20221213 14:11:05.372"/>
</return>
<msg timestamp="20221213 14:11:05.373" level="INFO">${messages} = [{'payload_bytes': 263, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</msg>
<status status="PASS" starttime="20221213 14:11:05.363" endtime="20221213 14:11:05.373"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 263, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:05.374" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'value': {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4...</msg>
<status status="PASS" starttime="20221213 14:11:05.374" endtime="20221213 14:11:05.374"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:05.375" level="INFO">${expected_scan_level} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.375" endtime="20221213 14:11:05.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:05.375" endtime="20221213 14:11:05.376"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:05.376" level="INFO">@{reference_parts} = [ IPAddressV4 | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:05.376" endtime="20221213 14:11:05.376"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.376" endtime="20221213 14:11:05.377"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="PASS" starttime="20221213 14:11:05.377" endtime="20221213 14:11:05.377"/>
</return>
<status status="PASS" starttime="20221213 14:11:05.377" endtime="20221213 14:11:05.377"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.377" endtime="20221213 14:11:05.377"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.375" endtime="20221213 14:11:05.377"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.374" endtime="20221213 14:11:05.377"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.373" endtime="20221213 14:11:05.377"/>
</iter>
<status status="PASS" starttime="20221213 14:11:05.373" endtime="20221213 14:11:05.377"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be mutated to ${scan_levels}[0]</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.377" endtime="20221213 14:11:05.377"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.362" endtime="20221213 14:11:05.378"/>
</kw>
<kw name="Verify Scan Profile Mutation Queue">
<arg>${REF_RESOLVEDHOSTNAME}</arg>
<arg>${{[0]}}</arg>
<kw name="Get Messages From Queue" library="robot">
<var>${messages}</var>
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_true</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.379" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_true | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:05.379" endtime="20221213 14:11:05.379"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.390" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_true", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:05.390" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '462', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:04 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":264,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:05.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.379" endtime="20221213 14:11:05.390"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:05.390" endtime="20221213 14:11:05.390"/>
</return>
<msg timestamp="20221213 14:11:05.391" level="INFO">${messages} = [{'payload_bytes': 263, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", ...</msg>
<status status="PASS" starttime="20221213 14:11:05.378" endtime="20221213 14:11:05.391"/>
</kw>
<for flavor="IN">
<var>${message}</var>
<value>@{messages}</value>
<iter>
<var name="${message}">{'payload_bytes': 263, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 5, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:05.392" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'IPAddressV4|internet|1.1.1.1', 'value': {'primary_key': 'IPAddressV4|internet|1.1.1.1', 'object_type': 'IPAddressV4', 'scan_profile': {'reference': 'IPAddressV4...</msg>
<status status="PASS" starttime="20221213 14:11:05.391" endtime="20221213 14:11:05.392"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.392" endtime="20221213 14:11:05.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.393"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.393"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.393"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.393"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.393"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:05.392" endtime="20221213 14:11:05.393"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.392" endtime="20221213 14:11:05.393"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.391" endtime="20221213 14:11:05.393"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 263, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 4, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:05.394" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'Hostname|internet|example.com', 'value': {'primary_key': 'Hostname|internet|example.com', 'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|int...</msg>
<status status="PASS" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.394"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</return>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</branch>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</if>
<status status="NOT RUN" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.395"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.394" endtime="20221213 14:11:05.395"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.393" endtime="20221213 14:11:05.395"/>
</iter>
<iter>
<var name="${message}">{'payload_bytes': 346, 'redelivered': True, 'exchange': '', 'routing_key': '_dev__scan_profile_mutations', 'message_count': 3, 'properties': {'delivery_mode': 2}, 'payload': '{"operation": "create", "...</var>
<kw name="Evaluate" library="BuiltIn">
<var>${payload}</var>
<arg>json.loads("""${message["payload"]}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20221213 14:11:05.396" level="INFO">${payload} = {'operation': 'create', 'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'value': {'primary_key': 'ResolvedHostname|internet|example.com|internet|1.1.1.1', 'object_type': 'Reso...</msg>
<status status="PASS" starttime="20221213 14:11:05.396" endtime="20221213 14:11:05.396"/>
</kw>
<if>
<branch type="IF" condition="&quot;${payload['primary_key']}&quot; == &quot;${reference}&quot;">
<kw name="Remove From List" library="Collections">
<var>${expected_scan_level}</var>
<arg>${scan_levels}</arg>
<arg>0</arg>
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20221213 14:11:05.398" level="INFO">${expected_scan_level} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.397" endtime="20221213 14:11:05.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${payload["value"]["scan_profile"]["level"]}</arg>
<arg>${expected_scan_level}</arg>
<arg>Scan Level of ${reference} should be ${expected_scan_level} in the mutation queue</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20221213 14:11:05.398" endtime="20221213 14:11:05.398"/>
</kw>
<kw name="Split String" library="String">
<var>@{reference_parts}</var>
<arg>${reference}</arg>
<arg>|</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20221213 14:11:05.399" level="INFO">@{reference_parts} = [ ResolvedHostname | internet | example.com | internet | 1.1.1.1 ]</msg>
<status status="PASS" starttime="20221213 14:11:05.399" endtime="20221213 14:11:05.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${payload["value"]["object_type"]}</arg>
<arg>${reference_parts}[0]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:05.399" endtime="20221213 14:11:05.400"/>
</kw>
<if>
<branch type="IF" condition="${scan_levels} == []">
<return>
<status status="PASS" starttime="20221213 14:11:05.400" endtime="20221213 14:11:05.400"/>
</return>
<status status="PASS" starttime="20221213 14:11:05.400" endtime="20221213 14:11:05.400"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.400" endtime="20221213 14:11:05.400"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.397" endtime="20221213 14:11:05.400"/>
</branch>
<status status="PASS" starttime="20221213 14:11:05.397" endtime="20221213 14:11:05.400"/>
</if>
<status status="PASS" starttime="20221213 14:11:05.395" endtime="20221213 14:11:05.400"/>
</iter>
<status status="PASS" starttime="20221213 14:11:05.391" endtime="20221213 14:11:05.400"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>Scan Level of ${reference} should be mutated to ${scan_levels}[0]</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20221213 14:11:05.400" endtime="20221213 14:11:05.400"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.378" endtime="20221213 14:11:05.401"/>
</kw>
<kw name="Teardown Test" type="TEARDOWN">
<kw name="Cleanup" library="robot">
<kw name="Clear XTDB" library="robot">
<kw name="Get All Document Ids" library="robot">
<var>${ids}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>{:query {:find [?e] :where [[?e :xt/id]]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:05.402" level="INFO">${query} = {:query {:find [?e] :where [[?e :xt/id]]}}</msg>
<status status="PASS" starttime="20221213 14:11:05.402" endtime="20221213 14:11:05.402"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/edn</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.402" level="INFO">${headers} = {'Content-Type': 'application/edn', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:05.402" endtime="20221213 14:11:05.402"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/query</arg>
<arg>data=${query}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.411" level="INFO">POST Request : url=http://localhost:29002/_xtdb/query 
 path_url=/_xtdb/query 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/edn', 'Content-Length': '42'} 
 body={:query {:find [?e] :where [[?e :xt/id]]}} 
 </msg>
<msg timestamp="20221213 14:11:05.411" level="INFO">POST Response : url=http://localhost:29002/_xtdb/query 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '2465', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body=[["HostnameHTTPURL|http|internet|example.com|80|/"],["Hostname|internet|example.com"],["IPAddressV4|internet|1.1.1.1"],["IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["Origin|inference|dns-alias-resolving|Hostname|internet|example.com"],["Origin|inference|dns-resolving|Hostname|internet|example.com"],["Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1"],["Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/"],["Origin|inference|internet-nl|Hostname|internet|example.com"],["Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com"],["Origin|inference|ipv6-webservers|Hostname|internet|example.com"],["Origin|inference|nxdomain-flag|Hostname|internet|example.com"],["Origin|inference|nxdomain-header-flag|Hostname|internet|example.com"],["Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80"],["Origin|inference|resource-discovery|Hostname|internet|example.com"],["Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com"],["Origin|inference|url-classification|URL|internet|http://example.com/"],["Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|observation|boefje_normalizer_x|Hostname|internet|example.com"],["ResolvedHostname|internet|example.com|internet|1.1.1.1"],["ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/"],["ScanProfile|Hostname|internet|example.com"],["ScanProfile|IPAddressV4|internet|1.1.1.1"],["ScanProfile|IPPort|internet|1.1.1.1|tcp|80"],["ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["ScanProfile|URL|internet|http://example.com/"],["URL|internet|http://example.com/"]] 
 </msg>
<msg timestamp="20221213 14:11:05.411" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.403" endtime="20221213 14:11:05.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rows}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:05.412" level="INFO">${rows} = [['HostnameHTTPURL|http|internet|example.com|80|/'], ['Hostname|internet|example.com'], ['IPAddressV4|internet|1.1.1.1'], ['IPPort|internet|1.1.1.1|tcp|80'], ['OriginParameter|Origin|inference|dns-ali...</msg>
<status status="PASS" starttime="20221213 14:11:05.411" endtime="20221213 14:11:05.412"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ids}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.413" level="INFO">${ids} = []</msg>
<status status="PASS" starttime="20221213 14:11:05.412" endtime="20221213 14:11:05.413"/>
</kw>
<for flavor="IN">
<var>${cols}</var>
<value>@{rows}</value>
<iter>
<var name="${cols}">['HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.413" endtime="20221213 14:11:05.414"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.413" endtime="20221213 14:11:05.414"/>
</iter>
<iter>
<var name="${cols}">['Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.414" endtime="20221213 14:11:05.415"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.414" endtime="20221213 14:11:05.415"/>
</iter>
<iter>
<var name="${cols}">['IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.415" endtime="20221213 14:11:05.416"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.415" endtime="20221213 14:11:05.416"/>
</iter>
<iter>
<var name="${cols}">['IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.416" endtime="20221213 14:11:05.417"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.416" endtime="20221213 14:11:05.417"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.417" endtime="20221213 14:11:05.418"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.417" endtime="20221213 14:11:05.418"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.418" endtime="20221213 14:11:05.419"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.418" endtime="20221213 14:11:05.419"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.419" endtime="20221213 14:11:05.420"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.419" endtime="20221213 14:11:05.420"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.420" endtime="20221213 14:11:05.421"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.420" endtime="20221213 14:11:05.421"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.421" endtime="20221213 14:11:05.422"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.421" endtime="20221213 14:11:05.422"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.422" endtime="20221213 14:11:05.422"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.422" endtime="20221213 14:11:05.422"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-alias-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.423" endtime="20221213 14:11:05.423"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.422" endtime="20221213 14:11:05.423"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.423" endtime="20221213 14:11:05.424"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.423" endtime="20221213 14:11:05.424"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.424" endtime="20221213 14:11:05.425"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.424" endtime="20221213 14:11:05.425"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.425" endtime="20221213 14:11:05.426"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.425" endtime="20221213 14:11:05.426"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|internet-nl|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.426" endtime="20221213 14:11:05.427"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.426" endtime="20221213 14:11:05.427"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.427" endtime="20221213 14:11:05.427"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.427" endtime="20221213 14:11:05.427"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-webservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.428" endtime="20221213 14:11:05.428"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.427" endtime="20221213 14:11:05.428"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.428" endtime="20221213 14:11:05.429"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.428" endtime="20221213 14:11:05.429"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-header-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.429" endtime="20221213 14:11:05.430"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.429" endtime="20221213 14:11:05.430"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.430" endtime="20221213 14:11:05.431"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.430" endtime="20221213 14:11:05.431"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|resource-discovery|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.431" endtime="20221213 14:11:05.432"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.431" endtime="20221213 14:11:05.432"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.432" endtime="20221213 14:11:05.433"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.432" endtime="20221213 14:11:05.433"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-classification|URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.433" endtime="20221213 14:11:05.434"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.433" endtime="20221213 14:11:05.434"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.434" endtime="20221213 14:11:05.435"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.434" endtime="20221213 14:11:05.435"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.435" endtime="20221213 14:11:05.436"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.435" endtime="20221213 14:11:05.436"/>
</iter>
<iter>
<var name="${cols}">['Origin|observation|boefje_normalizer_x|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.436" endtime="20221213 14:11:05.436"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.436" endtime="20221213 14:11:05.436"/>
</iter>
<iter>
<var name="${cols}">['ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.437" endtime="20221213 14:11:05.437"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.436" endtime="20221213 14:11:05.437"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.437" endtime="20221213 14:11:05.438"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.437" endtime="20221213 14:11:05.438"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.438" endtime="20221213 14:11:05.439"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.438" endtime="20221213 14:11:05.439"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.439" endtime="20221213 14:11:05.440"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.439" endtime="20221213 14:11:05.440"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.440" endtime="20221213 14:11:05.441"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.440" endtime="20221213 14:11:05.441"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.441" endtime="20221213 14:11:05.441"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.441" endtime="20221213 14:11:05.441"/>
</iter>
<iter>
<var name="${cols}">['ScanProfile|URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.442" endtime="20221213 14:11:05.442"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.441" endtime="20221213 14:11:05.442"/>
</iter>
<iter>
<var name="${cols}">['URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.442" endtime="20221213 14:11:05.443"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.442" endtime="20221213 14:11:05.443"/>
</iter>
<status status="PASS" starttime="20221213 14:11:05.413" endtime="20221213 14:11:05.443"/>
</for>
<return>
<value>${ids}</value>
<status status="PASS" starttime="20221213 14:11:05.443" endtime="20221213 14:11:05.443"/>
</return>
<msg timestamp="20221213 14:11:05.443" level="INFO">${ids} = ['HostnameHTTPURL|http|internet|example.com|80|/', 'Hostname|internet|example.com', 'IPAddressV4|internet|1.1.1.1', 'IPPort|internet|1.1.1.1|tcp|80', 'OriginParameter|Origin|inference|dns-alias-resolv...</msg>
<status status="PASS" starttime="20221213 14:11:05.402" endtime="20221213 14:11:05.443"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${operations}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.444" level="INFO">${operations} = []</msg>
<status status="PASS" starttime="20221213 14:11:05.444" endtime="20221213 14:11:05.444"/>
</kw>
<for flavor="IN">
<var>${id}</var>
<value>@{ids}</value>
<iter>
<var name="${id}">HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.444" level="INFO">${operation} = ['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.444" endtime="20221213 14:11:05.444"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.444" endtime="20221213 14:11:05.445"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.444" endtime="20221213 14:11:05.445"/>
</iter>
<iter>
<var name="${id}">Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.445" level="INFO">${operation} = ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.445" endtime="20221213 14:11:05.445"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.445" endtime="20221213 14:11:05.445"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.445" endtime="20221213 14:11:05.445"/>
</iter>
<iter>
<var name="${id}">IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.446" level="INFO">${operation} = ['evict', 'IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.445" endtime="20221213 14:11:05.446"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.446" endtime="20221213 14:11:05.446"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.445" endtime="20221213 14:11:05.446"/>
</iter>
<iter>
<var name="${id}">IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.446" level="INFO">${operation} = ['evict', 'IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.446" endtime="20221213 14:11:05.446"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.447" endtime="20221213 14:11:05.447"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.446" endtime="20221213 14:11:05.447"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.447" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.447" endtime="20221213 14:11:05.447"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.447" endtime="20221213 14:11:05.448"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.447" endtime="20221213 14:11:05.448"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.448" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.448" endtime="20221213 14:11:05.448"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.448" endtime="20221213 14:11:05.448"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.448" endtime="20221213 14:11:05.448"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.449" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.448" endtime="20221213 14:11:05.449"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.449" endtime="20221213 14:11:05.449"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.448" endtime="20221213 14:11:05.449"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.449" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.449" endtime="20221213 14:11:05.449"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.449" endtime="20221213 14:11:05.450"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.449" endtime="20221213 14:11:05.450"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.450" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.450" endtime="20221213 14:11:05.450"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.450" endtime="20221213 14:11:05.450"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.450" endtime="20221213 14:11:05.450"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.451" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.451" endtime="20221213 14:11:05.451"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.451" endtime="20221213 14:11:05.451"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.450" endtime="20221213 14:11:05.451"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-alias-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.451" level="INFO">${operation} = ['evict', 'Origin|inference|dns-alias-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.451" endtime="20221213 14:11:05.451"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.451" endtime="20221213 14:11:05.452"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.451" endtime="20221213 14:11:05.452"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.452" level="INFO">${operation} = ['evict', 'Origin|inference|dns-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.452" endtime="20221213 14:11:05.452"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.452" endtime="20221213 14:11:05.452"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.452" endtime="20221213 14:11:05.452"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.453" level="INFO">${operation} = ['evict', 'Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.453" endtime="20221213 14:11:05.453"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.453" endtime="20221213 14:11:05.453"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.452" endtime="20221213 14:11:05.453"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.453" level="INFO">${operation} = ['evict', 'Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.453" endtime="20221213 14:11:05.453"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.453" endtime="20221213 14:11:05.454"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.453" endtime="20221213 14:11:05.454"/>
</iter>
<iter>
<var name="${id}">Origin|inference|internet-nl|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.454" level="INFO">${operation} = ['evict', 'Origin|inference|internet-nl|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.454" endtime="20221213 14:11:05.454"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.454" endtime="20221213 14:11:05.454"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.454" endtime="20221213 14:11:05.454"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.455" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.455" endtime="20221213 14:11:05.455"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.455" endtime="20221213 14:11:05.455"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.454" endtime="20221213 14:11:05.455"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-webservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.456" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-webservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.455" endtime="20221213 14:11:05.456"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.456" endtime="20221213 14:11:05.456"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.455" endtime="20221213 14:11:05.456"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.456" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.456" endtime="20221213 14:11:05.456"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.456" endtime="20221213 14:11:05.457"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.456" endtime="20221213 14:11:05.457"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-header-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.457" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-header-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.457" endtime="20221213 14:11:05.457"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.457" endtime="20221213 14:11:05.457"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.457" endtime="20221213 14:11:05.457"/>
</iter>
<iter>
<var name="${id}">Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.458" level="INFO">${operation} = ['evict', 'Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.457" endtime="20221213 14:11:05.458"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.458" endtime="20221213 14:11:05.458"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.457" endtime="20221213 14:11:05.458"/>
</iter>
<iter>
<var name="${id}">Origin|inference|resource-discovery|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.458" level="INFO">${operation} = ['evict', 'Origin|inference|resource-discovery|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.458" endtime="20221213 14:11:05.458"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.458" endtime="20221213 14:11:05.459"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.458" endtime="20221213 14:11:05.459"/>
</iter>
<iter>
<var name="${id}">Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.459" level="INFO">${operation} = ['evict', 'Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.459" endtime="20221213 14:11:05.459"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.459" endtime="20221213 14:11:05.459"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.459" endtime="20221213 14:11:05.459"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-classification|URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.460" level="INFO">${operation} = ['evict', 'Origin|inference|url-classification|URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.459" endtime="20221213 14:11:05.460"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.460" endtime="20221213 14:11:05.460"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.459" endtime="20221213 14:11:05.460"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.460" level="INFO">${operation} = ['evict', 'Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.460" endtime="20221213 14:11:05.460"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.460" endtime="20221213 14:11:05.461"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.460" endtime="20221213 14:11:05.461"/>
</iter>
<iter>
<var name="${id}">Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.461" level="INFO">${operation} = ['evict', 'Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.461" endtime="20221213 14:11:05.461"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.461" endtime="20221213 14:11:05.461"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.461" endtime="20221213 14:11:05.461"/>
</iter>
<iter>
<var name="${id}">Origin|observation|boefje_normalizer_x|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.462" level="INFO">${operation} = ['evict', 'Origin|observation|boefje_normalizer_x|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.461" endtime="20221213 14:11:05.462"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.462" endtime="20221213 14:11:05.462"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.461" endtime="20221213 14:11:05.462"/>
</iter>
<iter>
<var name="${id}">ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.462" level="INFO">${operation} = ['evict', 'ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.462" endtime="20221213 14:11:05.462"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.462" endtime="20221213 14:11:05.462"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.462" endtime="20221213 14:11:05.462"/>
</iter>
<iter>
<var name="${id}">ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.463" level="INFO">${operation} = ['evict', 'ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.463" endtime="20221213 14:11:05.463"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.463" endtime="20221213 14:11:05.463"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.463" endtime="20221213 14:11:05.463"/>
</iter>
<iter>
<var name="${id}">ScanProfile|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.463" level="INFO">${operation} = ['evict', 'ScanProfile|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.463" endtime="20221213 14:11:05.463"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.463" endtime="20221213 14:11:05.464"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.463" endtime="20221213 14:11:05.464"/>
</iter>
<iter>
<var name="${id}">ScanProfile|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.464" level="INFO">${operation} = ['evict', 'ScanProfile|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.464" endtime="20221213 14:11:05.464"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.464" endtime="20221213 14:11:05.464"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.464" endtime="20221213 14:11:05.464"/>
</iter>
<iter>
<var name="${id}">ScanProfile|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.465" level="INFO">${operation} = ['evict', 'ScanProfile|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.464" endtime="20221213 14:11:05.465"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.465" endtime="20221213 14:11:05.465"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.464" endtime="20221213 14:11:05.465"/>
</iter>
<iter>
<var name="${id}">ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.465" level="INFO">${operation} = ['evict', 'ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.465" endtime="20221213 14:11:05.465"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.465" endtime="20221213 14:11:05.465"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.465" endtime="20221213 14:11:05.465"/>
</iter>
<iter>
<var name="${id}">ScanProfile|URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.466" level="INFO">${operation} = ['evict', 'ScanProfile|URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.466" endtime="20221213 14:11:05.466"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.466" endtime="20221213 14:11:05.466"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.466" endtime="20221213 14:11:05.466"/>
</iter>
<iter>
<var name="${id}">URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:05.467" level="INFO">${operation} = ['evict', 'URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:05.466" endtime="20221213 14:11:05.467"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:05.467" endtime="20221213 14:11:05.467"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.466" endtime="20221213 14:11:05.467"/>
</iter>
<status status="PASS" starttime="20221213 14:11:05.444" endtime="20221213 14:11:05.467"/>
</for>
<kw name="Create Dictionary" library="BuiltIn">
<var>${transaction}</var>
<arg>tx-ops=${operations}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.467" level="INFO">${transaction} = {'tx-ops': [['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00'], ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00'], ['evict', 'IPAddressV4|in...</msg>
<status status="PASS" starttime="20221213 14:11:05.467" endtime="20221213 14:11:05.467"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.468" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:05.467" endtime="20221213 14:11:05.468"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/submit-tx</arg>
<arg>json=${transaction}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.474" level="INFO">POST Request : url=http://localhost:29002/_xtdb/submit-tx 
 path_url=/_xtdb/submit-tx 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '3802'} 
 body=b'{"tx-ops": [["evict", "HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-alias-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|internet-nl|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-webservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-header-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|resource-discovery|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-classification|URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|observation|boefje_normalizer_x|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "ScanProfile|URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"], ["evict", "URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"]]}' 
 </msg>
<msg timestamp="20221213 14:11:05.474" level="INFO">POST Response : url=http://localhost:29002/_xtdb/submit-tx 
 status=202, reason=Accepted 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:05 GMT', 'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '43', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={"txId":95,"txTime":"2022-12-13T13:11:05Z"} 
 </msg>
<msg timestamp="20221213 14:11:05.474" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.468" endtime="20221213 14:11:05.474"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.497" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.498" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:05 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:05.483-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:05.498" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.475" endtime="20221213 14:11:05.498"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.474" endtime="20221213 14:11:05.498"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.401" endtime="20221213 14:11:05.498"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.504" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.504" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:05 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:05.483-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:05.504" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.499" endtime="20221213 14:11:05.504"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.498" endtime="20221213 14:11:05.504"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>octopoes</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.505" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:05.505" endtime="20221213 14:11:05.505"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.513" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 path_url=/api/queues/kat/octopoes/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:05.513" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:05 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:05.513" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.505" endtime="20221213 14:11:05.513"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:05.513" endtime="20221213 14:11:05.514"/>
</return>
<status status="PASS" starttime="20221213 14:11:05.505" endtime="20221213 14:11:05.514"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.515" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:05.515" endtime="20221213 14:11:05.515"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.524" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:05.524" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:05 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:05.524" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.515" endtime="20221213 14:11:05.524"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:05.524" endtime="20221213 14:11:05.524"/>
</return>
<status status="PASS" starttime="20221213 14:11:05.514" endtime="20221213 14:11:05.525"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:05.525" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:05.525" endtime="20221213 14:11:05.525"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.536" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:05.536" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-encoding': 'gzip', 'content-length': '462', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:05 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":5,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"value\": {\"primary_key\": \"IPAddressV4|internet|1.1.1.1\", \"object_type\": \"IPAddressV4\", \"scan_profile\": {\"reference\": \"IPAddressV4|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":263,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":4,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"Hostname|internet|example.com\", \"value\": {\"primary_key\": \"Hostname|internet|example.com\", \"object_type\": \"Hostname\", \"scan_profile\": {\"reference\": \"Hostname|internet|example.com\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":346,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":3,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"value\": {\"primary_key\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"object_type\": \"ResolvedHostname\", \"scan_profile\": {\"reference\": \"ResolvedHostname|internet|example.com|internet|1.1.1.1\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":264,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":2,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"value\": {\"primary_key\": \"IPPort|internet|1.1.1.1|tcp|80\", \"object_type\": \"IPPort\", \"scan_profile\": {\"reference\": \"IPPort|internet|1.1.1.1|tcp|80\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":267,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":1,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"URL|internet|http://example.com/\", \"value\": {\"primary_key\": \"URL|internet|http://example.com/\", \"object_type\": \"URL\", \"scan_profile\": {\"reference\": \"URL|internet|http://example.com/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"},{"payload_bytes":321,"redelivered":true,"exchange":"","routing_key":"_dev__scan_profile_mutations","message_count":0,"properties":{"delivery_mode":2},"payload":"{\"operation\": \"create\", \"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"value\": {\"primary_key\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"object_type\": \"HostnameHTTPURL\", \"scan_profile\": {\"reference\": \"HostnameHTTPURL|http|internet|example.com|80|/\", \"level\": 0, \"scan_profile_type\": \"empty\"}}}","payload_encoding":"string"}] 
 </msg>
<msg timestamp="20221213 14:11:05.536" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.526" endtime="20221213 14:11:05.536"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:05.536" endtime="20221213 14:11:05.536"/>
</return>
<status status="PASS" starttime="20221213 14:11:05.525" endtime="20221213 14:11:05.537"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.401" endtime="20221213 14:11:05.537"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.538" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:05.538" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.538" endtime="20221213 14:11:05.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.538" endtime="20221213 14:11:05.539"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.538" endtime="20221213 14:11:05.539"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.537" endtime="20221213 14:11:05.539"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.539" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:05.539" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.539" endtime="20221213 14:11:05.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.540" endtime="20221213 14:11:05.540"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.539" endtime="20221213 14:11:05.540"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.539" endtime="20221213 14:11:05.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.541" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:05.541" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.541" endtime="20221213 14:11:05.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.541" endtime="20221213 14:11:05.541"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.540" endtime="20221213 14:11:05.541"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.540" endtime="20221213 14:11:05.541"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.537" endtime="20221213 14:11:05.541"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:05.547" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:05.547" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:05 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:05.483-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:05.547" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.542" endtime="20221213 14:11:05.547"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.541" endtime="20221213 14:11:05.547"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.537" endtime="20221213 14:11:05.547"/>
</kw>
<kw name="Stop Monitoring" library="CeleryMonitor">
<status status="PASS" starttime="20221213 14:11:05.547" endtime="20221213 14:11:05.548"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.401" endtime="20221213 14:11:05.548"/>
</kw>
<status status="PASS" starttime="20221213 14:11:04.355" endtime="20221213 14:11:05.548"/>
</test>
<status status="FAIL" starttime="20221213 14:11:00.547" endtime="20221213 14:11:05.548"/>
</suite>
<suite id="s1-s2" name="02 List Objects" source="/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/robot/02_list_objects.robot">
<test id="s1-s2-t1" name="List Objects" line="9">
<kw name="Setup Test" type="SETUP">
<kw name="Start Monitoring" library="CeleryMonitor">
<arg>${QUEUE_URI}</arg>
<msg timestamp="20221213 14:11:05.554" level="INFO">Started monitoring</msg>
<status status="PASS" starttime="20221213 14:11:05.554" endtime="20221213 14:11:05.554"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.553" endtime="20221213 14:11:05.554"/>
</kw>
<kw name="Insert Normalizer Output" library="robot">
<kw name="Insert Origin" library="robot">
<arg>tests/fixtures/normalizer_output.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${norm_output_json}</var>
<arg>${origin_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20221213 14:11:05.556" level="INFO" html="true">Getting file '&lt;a href="file:///Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json"&gt;/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json&lt;/a&gt;'.</msg>
<msg timestamp="20221213 14:11:05.556" level="INFO">${norm_output_json} = {
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",...</msg>
<status status="PASS" starttime="20221213 14:11:05.555" endtime="20221213 14:11:05.556"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/observations</arg>
<arg>${norm_output_json}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:05.629" level="INFO">POST Request : url=http://localhost:29000/_dev/observations 
 path_url=/_dev/observations 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '759'} 
 body={
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",
      "fqdn": "Hostname|internet|example.com."
    },
    {
      "object_type": "ResolvedHostname",
      "hostname": "Hostname|internet|example.com",
      "address": "IPAddressV4|internet|1.1.1.1"
    },
    {
      "object_type": "IPAddressV4",
      "network": "Network|internet",
      "address": "1.1.1.1"
    },
    {
        "object_type": "IPPort",
        "address": "IPAddressV4|internet|1.1.1.1",
        "protocol": "tcp",
        "port": 80,
        "state": "open"
    }
  ],
  "valid_time": "2019-01-01T00:00:00+00:00",
  "task_id": "1234"
} 
 </msg>
<msg timestamp="20221213 14:11:05.629" level="INFO">POST Response : url=http://localhost:29000/_dev/observations 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:05 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:05.629" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.556" endtime="20221213 14:11:05.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.629" endtime="20221213 14:11:05.631"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.555" endtime="20221213 14:11:05.631"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.555" endtime="20221213 14:11:05.631"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.634" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:05.634" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:05.633" endtime="20221213 14:11:05.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:05.634" endtime="20221213 14:11:05.634"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.633" endtime="20221213 14:11:05.634"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.632" endtime="20221213 14:11:05.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.635" level="INFO">Counting tasks of type task-received: 1</msg>
<msg timestamp="20221213 14:11:05.635" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:05.635" endtime="20221213 14:11:05.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:05.636" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:05.636" endtime="20221213 14:11:05.636"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:05.635" endtime="20221213 14:11:05.637"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.738" level="INFO">Counting tasks of type task-received: 4</msg>
<msg timestamp="20221213 14:11:05.738" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20221213 14:11:05.737" endtime="20221213 14:11:05.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:05.739" level="FAIL">4 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:05.738" endtime="20221213 14:11:05.739"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:05.737" endtime="20221213 14:11:05.739"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.841" level="INFO">Counting tasks of type task-received: 9</msg>
<msg timestamp="20221213 14:11:05.841" level="INFO">${count} = 9</msg>
<status status="PASS" starttime="20221213 14:11:05.840" endtime="20221213 14:11:05.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:05.842" level="FAIL">9 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:05.841" endtime="20221213 14:11:05.842"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:05.839" endtime="20221213 14:11:05.842"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:05.944" level="INFO">Counting tasks of type task-received: 5</msg>
<msg timestamp="20221213 14:11:05.944" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20221213 14:11:05.943" endtime="20221213 14:11:05.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:05.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:05.945" level="FAIL">5 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:05.944" endtime="20221213 14:11:05.945"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:05.943" endtime="20221213 14:11:05.945"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.046" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:06.046" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:06.046" endtime="20221213 14:11:06.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.047" endtime="20221213 14:11:06.047"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.046" endtime="20221213 14:11:06.047"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.635" endtime="20221213 14:11:06.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.048" level="INFO">Counting tasks of type task-started: 3</msg>
<msg timestamp="20221213 14:11:06.048" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20221213 14:11:06.048" endtime="20221213 14:11:06.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:06.049" level="FAIL">3 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:06.049" endtime="20221213 14:11:06.049"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:06.048" endtime="20221213 14:11:06.049"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.150" level="INFO">Counting tasks of type task-started: 1</msg>
<msg timestamp="20221213 14:11:06.151" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:06.150" endtime="20221213 14:11:06.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:06.151" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:06.151" endtime="20221213 14:11:06.151"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:06.150" endtime="20221213 14:11:06.151"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.253" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:06.253" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:06.253" endtime="20221213 14:11:06.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.253" endtime="20221213 14:11:06.253"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.252" endtime="20221213 14:11:06.253"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.047" endtime="20221213 14:11:06.254"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.632" endtime="20221213 14:11:06.254"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:06.260" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:06.260" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:06 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:06.162-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:06.260" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.254" endtime="20221213 14:11:06.260"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.254" endtime="20221213 14:11:06.260"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.632" endtime="20221213 14:11:06.261"/>
</kw>
<kw name="Object List Should Contain Reported Items">
<kw name="Get Objects" library="robot">
<var>${response_data}</var>
<kw name="Get Url" library="robot">
<var>${response_data}</var>
<arg>${OCTOPOES_URI}/objects</arg>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${url}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:06.333" level="INFO">GET Request : url=http://localhost:29000/_dev/objects 
 path_url=/_dev/objects 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:06.333" level="INFO">GET Response : url=http://localhost:29000/_dev/objects 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:05 GMT', 'server': 'uvicorn', 'content-length': '1699', 'content-type': 'application/json'} 
 body={"count":6,"items":[{"object_type":"Hostname","scan_profile":{"reference":"Hostname|internet|example.com","level":0,"scan_profile_type":"empty"},"primary_key":"Hostname|internet|example.com","network":"Network|internet","name":"example.com","fqdn":"Hostname|internet|example.com.","dns_zone":null},{"object_type":"HostnameHTTPURL","scan_profile":{"reference":"HostnameHTTPURL|http|internet|example.com|80|/","level":0,"scan_profile_type":"empty"},"primary_key":"HostnameHTTPURL|http|internet|example.com|80|/","network":"Network|internet","scheme":"http","port":80,"path":"/","netloc":"Hostname|internet|example.com"},{"object_type":"IPAddressV4","scan_profile":{"reference":"IPAddressV4|internet|1.1.1.1","level":0,"scan_profile_type":"empty"},"primary_key":"IPAddressV4|internet|1.1.1.1","address":"1.1.1.1","network":"Network|internet"},{"object_type":"IPPort","scan_profile":{"reference":"IPPort|internet|1.1.1.1|tcp|80","level":0,"scan_profile_type":"empty"},"primary_key":"IPPort|internet|1.1.1.1|tcp|80","address":"IPAddressV4|internet|1.1.1.1","protocol":"tcp","port":80,"state":"open"},{"object_type":"ResolvedHostname","scan_profile":{"reference":"ResolvedHostname|internet|example.com|internet|1.1.1.1","level":0,"scan_profile_type":"empty"},"primary_key":"ResolvedHostname|internet|example.com|internet|1.1.1.1","hostname":"Hostname|internet|example.com","address":"IPAddressV4|internet|1.1.1.1"},{"object_type":"URL","scan_profile":{"reference":"URL|internet|http://example.com/","level":0,"scan_profile_type":"empty"},"primary_key":"URL|internet|http://example.com/","network":"Network|internet","raw":"http://example.com/","web_url":"HostnameHTTPURL|http|internet|example.com|80|/"}]} 
 </msg>
<msg timestamp="20221213 14:11:06.333" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.262" endtime="20221213 14:11:06.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.333" endtime="20221213 14:11:06.334"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response.headers["content-type"]}</arg>
<arg>application/json</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:06.334" endtime="20221213 14:11:06.335"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:06.336" level="INFO">${response_data} = {'count': 6, 'items': [{'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'Hostname|internet|example.c...</msg>
<status status="PASS" starttime="20221213 14:11:06.335" endtime="20221213 14:11:06.336"/>
</kw>
<return>
<value>${response_data}</value>
<status status="PASS" starttime="20221213 14:11:06.336" endtime="20221213 14:11:06.336"/>
</return>
<msg timestamp="20221213 14:11:06.336" level="INFO">${response_data} = {'count': 6, 'items': [{'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'Hostname|internet|example.c...</msg>
<status status="PASS" starttime="20221213 14:11:06.261" endtime="20221213 14:11:06.336"/>
</kw>
<return>
<value>${response_data}</value>
<status status="PASS" starttime="20221213 14:11:06.336" endtime="20221213 14:11:06.336"/>
</return>
<msg timestamp="20221213 14:11:06.336" level="INFO">${response_data} = {'count': 6, 'items': [{'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'Hostname|internet|example.c...</msg>
<status status="PASS" starttime="20221213 14:11:06.261" endtime="20221213 14:11:06.336"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["count"]}</arg>
<arg>${6}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:06.337" endtime="20221213 14:11:06.337"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["items"][0]["primary_key"]}</arg>
<arg>${REF_HOSTNAME}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:06.337" endtime="20221213 14:11:06.338"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.261" endtime="20221213 14:11:06.338"/>
</kw>
<kw name="Teardown Test" type="TEARDOWN">
<kw name="Cleanup" library="robot">
<kw name="Clear XTDB" library="robot">
<kw name="Get All Document Ids" library="robot">
<var>${ids}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>{:query {:find [?e] :where [[?e :xt/id]]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:06.340" level="INFO">${query} = {:query {:find [?e] :where [[?e :xt/id]]}}</msg>
<status status="PASS" starttime="20221213 14:11:06.339" endtime="20221213 14:11:06.340"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/edn</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:06.340" level="INFO">${headers} = {'Content-Type': 'application/edn', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:06.340" endtime="20221213 14:11:06.340"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/query</arg>
<arg>data=${query}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:06.348" level="INFO">POST Request : url=http://localhost:29002/_xtdb/query 
 path_url=/_xtdb/query 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/edn', 'Content-Length': '42'} 
 body={:query {:find [?e] :where [[?e :xt/id]]}} 
 </msg>
<msg timestamp="20221213 14:11:06.348" level="INFO">POST Response : url=http://localhost:29002/_xtdb/query 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '2144', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body=[["HostnameHTTPURL|http|internet|example.com|80|/"],["Hostname|internet|example.com"],["IPAddressV4|internet|1.1.1.1"],["IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["Origin|inference|dns-alias-resolving|Hostname|internet|example.com"],["Origin|inference|dns-resolving|Hostname|internet|example.com"],["Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1"],["Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/"],["Origin|inference|internet-nl|Hostname|internet|example.com"],["Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com"],["Origin|inference|ipv6-webservers|Hostname|internet|example.com"],["Origin|inference|nxdomain-flag|Hostname|internet|example.com"],["Origin|inference|nxdomain-header-flag|Hostname|internet|example.com"],["Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80"],["Origin|inference|resource-discovery|Hostname|internet|example.com"],["Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com"],["Origin|inference|url-classification|URL|internet|http://example.com/"],["Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|observation|boefje_normalizer_x|Hostname|internet|example.com"],["ResolvedHostname|internet|example.com|internet|1.1.1.1"],["URL|internet|http://example.com/"]] 
 </msg>
<msg timestamp="20221213 14:11:06.348" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.340" endtime="20221213 14:11:06.348"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rows}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:06.350" level="INFO">${rows} = [['HostnameHTTPURL|http|internet|example.com|80|/'], ['Hostname|internet|example.com'], ['IPAddressV4|internet|1.1.1.1'], ['IPPort|internet|1.1.1.1|tcp|80'], ['OriginParameter|Origin|inference|dns-ali...</msg>
<status status="PASS" starttime="20221213 14:11:06.349" endtime="20221213 14:11:06.350"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ids}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.350" level="INFO">${ids} = []</msg>
<status status="PASS" starttime="20221213 14:11:06.350" endtime="20221213 14:11:06.350"/>
</kw>
<for flavor="IN">
<var>${cols}</var>
<value>@{rows}</value>
<iter>
<var name="${cols}">['HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.351" endtime="20221213 14:11:06.351"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.351" endtime="20221213 14:11:06.351"/>
</iter>
<iter>
<var name="${cols}">['Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.352" endtime="20221213 14:11:06.352"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.351" endtime="20221213 14:11:06.352"/>
</iter>
<iter>
<var name="${cols}">['IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.352" endtime="20221213 14:11:06.353"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.352" endtime="20221213 14:11:06.353"/>
</iter>
<iter>
<var name="${cols}">['IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.353" endtime="20221213 14:11:06.354"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.353" endtime="20221213 14:11:06.354"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.354" endtime="20221213 14:11:06.355"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.354" endtime="20221213 14:11:06.355"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.355" endtime="20221213 14:11:06.356"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.355" endtime="20221213 14:11:06.356"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.356" endtime="20221213 14:11:06.356"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.356" endtime="20221213 14:11:06.356"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.357" endtime="20221213 14:11:06.357"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.357" endtime="20221213 14:11:06.357"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.358" endtime="20221213 14:11:06.358"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.357" endtime="20221213 14:11:06.358"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.358" endtime="20221213 14:11:06.359"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.358" endtime="20221213 14:11:06.359"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-alias-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.359" endtime="20221213 14:11:06.360"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.359" endtime="20221213 14:11:06.360"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.360" endtime="20221213 14:11:06.361"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.360" endtime="20221213 14:11:06.361"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.361" endtime="20221213 14:11:06.362"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.361" endtime="20221213 14:11:06.362"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.362" endtime="20221213 14:11:06.363"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.362" endtime="20221213 14:11:06.363"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|internet-nl|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.363" endtime="20221213 14:11:06.363"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.363" endtime="20221213 14:11:06.363"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.364" endtime="20221213 14:11:06.364"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.364" endtime="20221213 14:11:06.364"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-webservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.364" endtime="20221213 14:11:06.365"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.364" endtime="20221213 14:11:06.365"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.365" endtime="20221213 14:11:06.366"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.365" endtime="20221213 14:11:06.366"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-header-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.366" endtime="20221213 14:11:06.367"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.366" endtime="20221213 14:11:06.367"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.367" endtime="20221213 14:11:06.368"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.367" endtime="20221213 14:11:06.368"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|resource-discovery|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.368" endtime="20221213 14:11:06.368"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.368" endtime="20221213 14:11:06.368"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.369" endtime="20221213 14:11:06.369"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.368" endtime="20221213 14:11:06.369"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-classification|URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.369" endtime="20221213 14:11:06.370"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.369" endtime="20221213 14:11:06.370"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.370" endtime="20221213 14:11:06.371"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.370" endtime="20221213 14:11:06.371"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.371" endtime="20221213 14:11:06.372"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.371" endtime="20221213 14:11:06.372"/>
</iter>
<iter>
<var name="${cols}">['Origin|observation|boefje_normalizer_x|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.372" endtime="20221213 14:11:06.372"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.372" endtime="20221213 14:11:06.372"/>
</iter>
<iter>
<var name="${cols}">['ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.373" endtime="20221213 14:11:06.373"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.373" endtime="20221213 14:11:06.373"/>
</iter>
<iter>
<var name="${cols}">['URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.373" endtime="20221213 14:11:06.374"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.373" endtime="20221213 14:11:06.374"/>
</iter>
<status status="PASS" starttime="20221213 14:11:06.350" endtime="20221213 14:11:06.374"/>
</for>
<return>
<value>${ids}</value>
<status status="PASS" starttime="20221213 14:11:06.374" endtime="20221213 14:11:06.374"/>
</return>
<msg timestamp="20221213 14:11:06.374" level="INFO">${ids} = ['HostnameHTTPURL|http|internet|example.com|80|/', 'Hostname|internet|example.com', 'IPAddressV4|internet|1.1.1.1', 'IPPort|internet|1.1.1.1|tcp|80', 'OriginParameter|Origin|inference|dns-alias-resolv...</msg>
<status status="PASS" starttime="20221213 14:11:06.339" endtime="20221213 14:11:06.374"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${operations}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.375" level="INFO">${operations} = []</msg>
<status status="PASS" starttime="20221213 14:11:06.375" endtime="20221213 14:11:06.375"/>
</kw>
<for flavor="IN">
<var>${id}</var>
<value>@{ids}</value>
<iter>
<var name="${id}">HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.375" level="INFO">${operation} = ['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.375" endtime="20221213 14:11:06.375"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.375" endtime="20221213 14:11:06.375"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.375" endtime="20221213 14:11:06.376"/>
</iter>
<iter>
<var name="${id}">Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.376" level="INFO">${operation} = ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.376" endtime="20221213 14:11:06.376"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.376" endtime="20221213 14:11:06.376"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.376" endtime="20221213 14:11:06.376"/>
</iter>
<iter>
<var name="${id}">IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.377" level="INFO">${operation} = ['evict', 'IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.376" endtime="20221213 14:11:06.377"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.377" endtime="20221213 14:11:06.377"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.376" endtime="20221213 14:11:06.377"/>
</iter>
<iter>
<var name="${id}">IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.377" level="INFO">${operation} = ['evict', 'IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.377" endtime="20221213 14:11:06.377"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.377" endtime="20221213 14:11:06.378"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.377" endtime="20221213 14:11:06.378"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.378" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.378" endtime="20221213 14:11:06.378"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.378" endtime="20221213 14:11:06.378"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.378" endtime="20221213 14:11:06.378"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.379" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.378" endtime="20221213 14:11:06.379"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.379" endtime="20221213 14:11:06.379"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.378" endtime="20221213 14:11:06.379"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.379" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.379" endtime="20221213 14:11:06.379"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.379" endtime="20221213 14:11:06.380"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.379" endtime="20221213 14:11:06.380"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.380" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.380" endtime="20221213 14:11:06.380"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.380" endtime="20221213 14:11:06.380"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.380" endtime="20221213 14:11:06.380"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.381" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.381" endtime="20221213 14:11:06.381"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.381" endtime="20221213 14:11:06.381"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.381" endtime="20221213 14:11:06.381"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.382" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.381" endtime="20221213 14:11:06.382"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.382" endtime="20221213 14:11:06.382"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.381" endtime="20221213 14:11:06.382"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-alias-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.382" level="INFO">${operation} = ['evict', 'Origin|inference|dns-alias-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.382" endtime="20221213 14:11:06.382"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.382" endtime="20221213 14:11:06.383"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.382" endtime="20221213 14:11:06.383"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.383" level="INFO">${operation} = ['evict', 'Origin|inference|dns-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.383" endtime="20221213 14:11:06.383"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.383" endtime="20221213 14:11:06.383"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.383" endtime="20221213 14:11:06.383"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.384" level="INFO">${operation} = ['evict', 'Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.384" endtime="20221213 14:11:06.384"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.384" endtime="20221213 14:11:06.384"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.383" endtime="20221213 14:11:06.384"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.384" level="INFO">${operation} = ['evict', 'Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.384" endtime="20221213 14:11:06.384"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.385" endtime="20221213 14:11:06.385"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.384" endtime="20221213 14:11:06.385"/>
</iter>
<iter>
<var name="${id}">Origin|inference|internet-nl|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.385" level="INFO">${operation} = ['evict', 'Origin|inference|internet-nl|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.385" endtime="20221213 14:11:06.385"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.385" endtime="20221213 14:11:06.385"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.385" endtime="20221213 14:11:06.385"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.386" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.386" endtime="20221213 14:11:06.386"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.386" endtime="20221213 14:11:06.386"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.385" endtime="20221213 14:11:06.386"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-webservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.386" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-webservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.386" endtime="20221213 14:11:06.386"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.387" endtime="20221213 14:11:06.387"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.386" endtime="20221213 14:11:06.387"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.387" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.387" endtime="20221213 14:11:06.387"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.387" endtime="20221213 14:11:06.387"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.387" endtime="20221213 14:11:06.387"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-header-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.388" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-header-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.388" endtime="20221213 14:11:06.388"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.388" endtime="20221213 14:11:06.388"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.387" endtime="20221213 14:11:06.388"/>
</iter>
<iter>
<var name="${id}">Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.388" level="INFO">${operation} = ['evict', 'Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.388" endtime="20221213 14:11:06.388"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.388" endtime="20221213 14:11:06.389"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.388" endtime="20221213 14:11:06.389"/>
</iter>
<iter>
<var name="${id}">Origin|inference|resource-discovery|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.389" level="INFO">${operation} = ['evict', 'Origin|inference|resource-discovery|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.389" endtime="20221213 14:11:06.389"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.389" endtime="20221213 14:11:06.389"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.389" endtime="20221213 14:11:06.389"/>
</iter>
<iter>
<var name="${id}">Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.390" level="INFO">${operation} = ['evict', 'Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.389" endtime="20221213 14:11:06.390"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.390" endtime="20221213 14:11:06.390"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.389" endtime="20221213 14:11:06.390"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-classification|URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.390" level="INFO">${operation} = ['evict', 'Origin|inference|url-classification|URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.390" endtime="20221213 14:11:06.390"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.390" endtime="20221213 14:11:06.390"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.390" endtime="20221213 14:11:06.390"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.391" level="INFO">${operation} = ['evict', 'Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.391" endtime="20221213 14:11:06.391"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.391" endtime="20221213 14:11:06.391"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.391" endtime="20221213 14:11:06.391"/>
</iter>
<iter>
<var name="${id}">Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.391" level="INFO">${operation} = ['evict', 'Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.391" endtime="20221213 14:11:06.391"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.392" endtime="20221213 14:11:06.392"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.391" endtime="20221213 14:11:06.392"/>
</iter>
<iter>
<var name="${id}">Origin|observation|boefje_normalizer_x|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.392" level="INFO">${operation} = ['evict', 'Origin|observation|boefje_normalizer_x|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.392" endtime="20221213 14:11:06.392"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.392" endtime="20221213 14:11:06.392"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.392" endtime="20221213 14:11:06.392"/>
</iter>
<iter>
<var name="${id}">ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.393" level="INFO">${operation} = ['evict', 'ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.393" endtime="20221213 14:11:06.393"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.393" endtime="20221213 14:11:06.393"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.392" endtime="20221213 14:11:06.393"/>
</iter>
<iter>
<var name="${id}">URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:06.393" level="INFO">${operation} = ['evict', 'URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:06.393" endtime="20221213 14:11:06.393"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:06.393" endtime="20221213 14:11:06.394"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.393" endtime="20221213 14:11:06.394"/>
</iter>
<status status="PASS" starttime="20221213 14:11:06.375" endtime="20221213 14:11:06.394"/>
</for>
<kw name="Create Dictionary" library="BuiltIn">
<var>${transaction}</var>
<arg>tx-ops=${operations}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:06.394" level="INFO">${transaction} = {'tx-ops': [['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00'], ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00'], ['evict', 'IPAddressV4|in...</msg>
<status status="PASS" starttime="20221213 14:11:06.394" endtime="20221213 14:11:06.394"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:06.394" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:06.394" endtime="20221213 14:11:06.394"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/submit-tx</arg>
<arg>json=${transaction}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:06.401" level="INFO">POST Request : url=http://localhost:29002/_xtdb/submit-tx 
 path_url=/_xtdb/submit-tx 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '3247'} 
 body=b'{"tx-ops": [["evict", "HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-alias-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|internet-nl|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-webservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-header-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|resource-discovery|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-classification|URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|observation|boefje_normalizer_x|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"]]}' 
 </msg>
<msg timestamp="20221213 14:11:06.401" level="INFO">POST Response : url=http://localhost:29002/_xtdb/submit-tx 
 status=202, reason=Accepted 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:06 GMT', 'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '44', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={"txId":105,"txTime":"2022-12-13T13:11:06Z"} 
 </msg>
<msg timestamp="20221213 14:11:06.401" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.395" endtime="20221213 14:11:06.401"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:06.417" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:06.417" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:06 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:06.410-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:06.417" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.401" endtime="20221213 14:11:06.417"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.401" endtime="20221213 14:11:06.417"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.339" endtime="20221213 14:11:06.417"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:06.422" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:06.422" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:06 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:06.410-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:06.422" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.418" endtime="20221213 14:11:06.422"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.417" endtime="20221213 14:11:06.422"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>octopoes</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:06.424" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:06.423" endtime="20221213 14:11:06.424"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:06.431" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 path_url=/api/queues/kat/octopoes/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:06.432" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:06 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:06.432" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.424" endtime="20221213 14:11:06.432"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:06.432" endtime="20221213 14:11:06.432"/>
</return>
<status status="PASS" starttime="20221213 14:11:06.423" endtime="20221213 14:11:06.433"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:06.433" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:06.433" endtime="20221213 14:11:06.434"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:06.443" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:06.443" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:06 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:06.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.434" endtime="20221213 14:11:06.443"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:06.443" endtime="20221213 14:11:06.443"/>
</return>
<status status="PASS" starttime="20221213 14:11:06.433" endtime="20221213 14:11:06.444"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:06.445" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:06.444" endtime="20221213 14:11:06.445"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:06.452" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:06.452" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:06 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:06.453" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.445" endtime="20221213 14:11:06.453"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:06.453" endtime="20221213 14:11:06.453"/>
</return>
<status status="PASS" starttime="20221213 14:11:06.444" endtime="20221213 14:11:06.453"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.339" endtime="20221213 14:11:06.453"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.455" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:06.455" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:06.455" endtime="20221213 14:11:06.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.455" endtime="20221213 14:11:06.455"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.454" endtime="20221213 14:11:06.455"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.454" endtime="20221213 14:11:06.455"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.456" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:06.456" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:06.456" endtime="20221213 14:11:06.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.456" endtime="20221213 14:11:06.456"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.456" endtime="20221213 14:11:06.457"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.455" endtime="20221213 14:11:06.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.457" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:06.457" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:06.457" endtime="20221213 14:11:06.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.457" endtime="20221213 14:11:06.458"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.457" endtime="20221213 14:11:06.458"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.457" endtime="20221213 14:11:06.458"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.454" endtime="20221213 14:11:06.458"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:06.464" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:06.464" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:06 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:06.410-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:06.464" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.458" endtime="20221213 14:11:06.464"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.458" endtime="20221213 14:11:06.464"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.454" endtime="20221213 14:11:06.464"/>
</kw>
<kw name="Stop Monitoring" library="CeleryMonitor">
<status status="PASS" starttime="20221213 14:11:06.464" endtime="20221213 14:11:06.464"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.338" endtime="20221213 14:11:06.464"/>
</kw>
<status status="PASS" starttime="20221213 14:11:05.553" endtime="20221213 14:11:06.465"/>
</test>
<test id="s1-s2-t2" name="List Objects With Filter" line="14">
<kw name="Setup Test" type="SETUP">
<kw name="Start Monitoring" library="CeleryMonitor">
<arg>${QUEUE_URI}</arg>
<msg timestamp="20221213 14:11:06.466" level="INFO">Started monitoring</msg>
<status status="PASS" starttime="20221213 14:11:06.465" endtime="20221213 14:11:06.466"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.465" endtime="20221213 14:11:06.466"/>
</kw>
<kw name="Insert Normalizer Output" library="robot">
<kw name="Insert Origin" library="robot">
<arg>tests/fixtures/normalizer_output.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${norm_output_json}</var>
<arg>${origin_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20221213 14:11:06.467" level="INFO" html="true">Getting file '&lt;a href="file:///Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json"&gt;/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output.json&lt;/a&gt;'.</msg>
<msg timestamp="20221213 14:11:06.468" level="INFO">${norm_output_json} = {
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",...</msg>
<status status="PASS" starttime="20221213 14:11:06.467" endtime="20221213 14:11:06.468"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/observations</arg>
<arg>${norm_output_json}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:06.542" level="INFO">POST Request : url=http://localhost:29000/_dev/observations 
 path_url=/_dev/observations 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '759'} 
 body={
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [
    {
      "object_type": "Hostname",
      "network": "Network|internet",
      "name": "example.com",
      "fqdn": "Hostname|internet|example.com."
    },
    {
      "object_type": "ResolvedHostname",
      "hostname": "Hostname|internet|example.com",
      "address": "IPAddressV4|internet|1.1.1.1"
    },
    {
      "object_type": "IPAddressV4",
      "network": "Network|internet",
      "address": "1.1.1.1"
    },
    {
        "object_type": "IPPort",
        "address": "IPAddressV4|internet|1.1.1.1",
        "protocol": "tcp",
        "port": 80,
        "state": "open"
    }
  ],
  "valid_time": "2019-01-01T00:00:00+00:00",
  "task_id": "1234"
} 
 </msg>
<msg timestamp="20221213 14:11:06.542" level="INFO">POST Response : url=http://localhost:29000/_dev/observations 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:06 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:06.542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.468" endtime="20221213 14:11:06.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.543" endtime="20221213 14:11:06.544"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.466" endtime="20221213 14:11:06.544"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.466" endtime="20221213 14:11:06.544"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.547" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:06.547" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:06.546" endtime="20221213 14:11:06.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.547" endtime="20221213 14:11:06.548"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.546" endtime="20221213 14:11:06.548"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.545" endtime="20221213 14:11:06.548"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.550" level="INFO">Counting tasks of type task-received: 1</msg>
<msg timestamp="20221213 14:11:06.551" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20221213 14:11:06.550" endtime="20221213 14:11:06.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:06.551" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:06.551" endtime="20221213 14:11:06.551"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:06.549" endtime="20221213 14:11:06.552"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.653" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:06.653" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:06.653" endtime="20221213 14:11:06.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:06.653" endtime="20221213 14:11:06.654"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.652" endtime="20221213 14:11:06.654"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.549" endtime="20221213 14:11:06.654"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.655" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:06.656" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:06.655" endtime="20221213 14:11:06.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:06.657" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:06.656" endtime="20221213 14:11:06.657"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:06.654" endtime="20221213 14:11:06.657"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.759" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:06.759" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:06.758" endtime="20221213 14:11:06.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:06.760" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:06.759" endtime="20221213 14:11:06.760"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:06.758" endtime="20221213 14:11:06.760"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.863" level="INFO">Counting tasks of type task-started: 6</msg>
<msg timestamp="20221213 14:11:06.863" level="INFO">${count} = 6</msg>
<status status="PASS" starttime="20221213 14:11:06.862" endtime="20221213 14:11:06.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:06.864" level="FAIL">6 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:06.863" endtime="20221213 14:11:06.864"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:06.862" endtime="20221213 14:11:06.864"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:06.965" level="INFO">Counting tasks of type task-started: 3</msg>
<msg timestamp="20221213 14:11:06.965" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20221213 14:11:06.965" endtime="20221213 14:11:06.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:06.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:06.966" level="FAIL">3 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:06.966" endtime="20221213 14:11:06.966"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:06.965" endtime="20221213 14:11:06.966"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.067" level="INFO">Counting tasks of type task-started: 2</msg>
<msg timestamp="20221213 14:11:07.067" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20221213 14:11:07.067" endtime="20221213 14:11:07.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:07.068" level="FAIL">2 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:07.067" endtime="20221213 14:11:07.068"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:07.067" endtime="20221213 14:11:07.068"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.169" level="INFO">Counting tasks of type task-started: 5</msg>
<msg timestamp="20221213 14:11:07.169" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20221213 14:11:07.169" endtime="20221213 14:11:07.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:07.170" level="FAIL">5 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:07.170" endtime="20221213 14:11:07.170"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:07.168" endtime="20221213 14:11:07.171"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.272" level="INFO">Counting tasks of type task-started: 2</msg>
<msg timestamp="20221213 14:11:07.272" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20221213 14:11:07.272" endtime="20221213 14:11:07.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20221213 14:11:07.273" level="FAIL">2 != 0</msg>
<status status="FAIL" starttime="20221213 14:11:07.272" endtime="20221213 14:11:07.273"/>
</kw>
<status status="FAIL" starttime="20221213 14:11:07.271" endtime="20221213 14:11:07.273"/>
</kw>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.374" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:07.374" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:07.373" endtime="20221213 14:11:07.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.374" endtime="20221213 14:11:07.374"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.373" endtime="20221213 14:11:07.374"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.654" endtime="20221213 14:11:07.374"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.545" endtime="20221213 14:11:07.374"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.380" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.380" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:07.225-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:07.380" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.375" endtime="20221213 14:11:07.380"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.374" endtime="20221213 14:11:07.380"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.544" endtime="20221213 14:11:07.380"/>
</kw>
<kw name="Verify Object List With Filter">
<kw name="Get Objects With ScanLevel 0">
<var>${response_data}</var>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/objects</arg>
<arg>params=scan_level=0</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.426" level="INFO">GET Request : url=http://localhost:29000/_dev/objects?scan_level=0 
 path_url=/_dev/objects?scan_level=0 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.426" level="INFO">GET Response : url=http://localhost:29000/_dev/objects?scan_level=0 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:06 GMT', 'server': 'uvicorn', 'content-length': '1699', 'content-type': 'application/json'} 
 body={"count":6,"items":[{"object_type":"Hostname","scan_profile":{"reference":"Hostname|internet|example.com","level":0,"scan_profile_type":"empty"},"primary_key":"Hostname|internet|example.com","network":"Network|internet","name":"example.com","fqdn":"Hostname|internet|example.com.","dns_zone":null},{"object_type":"HostnameHTTPURL","scan_profile":{"reference":"HostnameHTTPURL|http|internet|example.com|80|/","level":0,"scan_profile_type":"empty"},"primary_key":"HostnameHTTPURL|http|internet|example.com|80|/","network":"Network|internet","scheme":"http","port":80,"path":"/","netloc":"Hostname|internet|example.com"},{"object_type":"IPAddressV4","scan_profile":{"reference":"IPAddressV4|internet|1.1.1.1","level":0,"scan_profile_type":"empty"},"primary_key":"IPAddressV4|internet|1.1.1.1","address":"1.1.1.1","network":"Network|internet"},{"object_type":"IPPort","scan_profile":{"reference":"IPPort|internet|1.1.1.1|tcp|80","level":0,"scan_profile_type":"empty"},"primary_key":"IPPort|internet|1.1.1.1|tcp|80","address":"IPAddressV4|internet|1.1.1.1","protocol":"tcp","port":80,"state":"open"},{"object_type":"ResolvedHostname","scan_profile":{"reference":"ResolvedHostname|internet|example.com|internet|1.1.1.1","level":0,"scan_profile_type":"empty"},"primary_key":"ResolvedHostname|internet|example.com|internet|1.1.1.1","hostname":"Hostname|internet|example.com","address":"IPAddressV4|internet|1.1.1.1"},{"object_type":"URL","scan_profile":{"reference":"URL|internet|http://example.com/","level":0,"scan_profile_type":"empty"},"primary_key":"URL|internet|http://example.com/","network":"Network|internet","raw":"http://example.com/","web_url":"HostnameHTTPURL|http|internet|example.com|80|/"}]} 
 </msg>
<msg timestamp="20221213 14:11:07.426" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.381" endtime="20221213 14:11:07.426"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${response_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:07.428" level="INFO">${response_data} = {'count': 6, 'items': [{'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'Hostname|internet|example.c...</msg>
<status status="PASS" starttime="20221213 14:11:07.426" endtime="20221213 14:11:07.428"/>
</kw>
<return>
<value>${response_data}</value>
<status status="PASS" starttime="20221213 14:11:07.428" endtime="20221213 14:11:07.428"/>
</return>
<msg timestamp="20221213 14:11:07.428" level="INFO">${response_data} = {'count': 6, 'items': [{'object_type': 'Hostname', 'scan_profile': {'reference': 'Hostname|internet|example.com', 'level': 0, 'scan_profile_type': 'empty'}, 'primary_key': 'Hostname|internet|example.c...</msg>
<status status="PASS" starttime="20221213 14:11:07.381" endtime="20221213 14:11:07.428"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response_data["count"]}</arg>
<arg>${6}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20221213 14:11:07.428" endtime="20221213 14:11:07.430"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.381" endtime="20221213 14:11:07.430"/>
</kw>
<kw name="Teardown Test" type="TEARDOWN">
<kw name="Cleanup" library="robot">
<kw name="Clear XTDB" library="robot">
<kw name="Get All Document Ids" library="robot">
<var>${ids}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>{:query {:find [?e] :where [[?e :xt/id]]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:07.432" level="INFO">${query} = {:query {:find [?e] :where [[?e :xt/id]]}}</msg>
<status status="PASS" starttime="20221213 14:11:07.432" endtime="20221213 14:11:07.432"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/edn</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.433" level="INFO">${headers} = {'Content-Type': 'application/edn', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:07.433" endtime="20221213 14:11:07.433"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/query</arg>
<arg>data=${query}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.445" level="INFO">POST Request : url=http://localhost:29002/_xtdb/query 
 path_url=/_xtdb/query 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/edn', 'Content-Length': '42'} 
 body={:query {:find [?e] :where [[?e :xt/id]]}} 
 </msg>
<msg timestamp="20221213 14:11:07.445" level="INFO">POST Response : url=http://localhost:29002/_xtdb/query 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '2144', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body=[["HostnameHTTPURL|http|internet|example.com|80|/"],["Hostname|internet|example.com"],["IPAddressV4|internet|1.1.1.1"],["IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80"],["OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1"],["Origin|inference|dns-alias-resolving|Hostname|internet|example.com"],["Origin|inference|dns-resolving|Hostname|internet|example.com"],["Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1"],["Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/"],["Origin|inference|internet-nl|Hostname|internet|example.com"],["Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com"],["Origin|inference|ipv6-webservers|Hostname|internet|example.com"],["Origin|inference|nxdomain-flag|Hostname|internet|example.com"],["Origin|inference|nxdomain-header-flag|Hostname|internet|example.com"],["Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80"],["Origin|inference|resource-discovery|Hostname|internet|example.com"],["Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com"],["Origin|inference|url-classification|URL|internet|http://example.com/"],["Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1"],["Origin|observation|boefje_normalizer_x|Hostname|internet|example.com"],["ResolvedHostname|internet|example.com|internet|1.1.1.1"],["URL|internet|http://example.com/"]] 
 </msg>
<msg timestamp="20221213 14:11:07.445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.433" endtime="20221213 14:11:07.445"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rows}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:07.446" level="INFO">${rows} = [['HostnameHTTPURL|http|internet|example.com|80|/'], ['Hostname|internet|example.com'], ['IPAddressV4|internet|1.1.1.1'], ['IPPort|internet|1.1.1.1|tcp|80'], ['OriginParameter|Origin|inference|dns-ali...</msg>
<status status="PASS" starttime="20221213 14:11:07.445" endtime="20221213 14:11:07.446"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ids}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.447" level="INFO">${ids} = []</msg>
<status status="PASS" starttime="20221213 14:11:07.446" endtime="20221213 14:11:07.447"/>
</kw>
<for flavor="IN">
<var>${cols}</var>
<value>@{rows}</value>
<iter>
<var name="${cols}">['HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.447" endtime="20221213 14:11:07.448"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.447" endtime="20221213 14:11:07.448"/>
</iter>
<iter>
<var name="${cols}">['Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.448" endtime="20221213 14:11:07.449"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.448" endtime="20221213 14:11:07.449"/>
</iter>
<iter>
<var name="${cols}">['IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.449" endtime="20221213 14:11:07.450"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.449" endtime="20221213 14:11:07.450"/>
</iter>
<iter>
<var name="${cols}">['IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.451" endtime="20221213 14:11:07.451"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.450" endtime="20221213 14:11:07.451"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.452" endtime="20221213 14:11:07.452"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.451" endtime="20221213 14:11:07.452"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.453" endtime="20221213 14:11:07.453"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.452" endtime="20221213 14:11:07.453"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.454" endtime="20221213 14:11:07.454"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.453" endtime="20221213 14:11:07.454"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.455" endtime="20221213 14:11:07.455"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.454" endtime="20221213 14:11:07.455"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.455" endtime="20221213 14:11:07.456"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.455" endtime="20221213 14:11:07.456"/>
</iter>
<iter>
<var name="${cols}">['OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.456" endtime="20221213 14:11:07.457"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.456" endtime="20221213 14:11:07.457"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-alias-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.457" endtime="20221213 14:11:07.458"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.457" endtime="20221213 14:11:07.458"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|dns-resolving|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.458" endtime="20221213 14:11:07.459"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.458" endtime="20221213 14:11:07.459"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.459" endtime="20221213 14:11:07.460"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.459" endtime="20221213 14:11:07.460"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.460" endtime="20221213 14:11:07.461"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.460" endtime="20221213 14:11:07.461"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|internet-nl|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.461" endtime="20221213 14:11:07.462"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.461" endtime="20221213 14:11:07.462"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.462" endtime="20221213 14:11:07.462"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.462" endtime="20221213 14:11:07.462"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|ipv6-webservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.463" endtime="20221213 14:11:07.463"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.463" endtime="20221213 14:11:07.463"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.464" endtime="20221213 14:11:07.464"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.463" endtime="20221213 14:11:07.464"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|nxdomain-header-flag|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.464" endtime="20221213 14:11:07.465"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.464" endtime="20221213 14:11:07.465"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.465" endtime="20221213 14:11:07.466"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.465" endtime="20221213 14:11:07.466"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|resource-discovery|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.466" endtime="20221213 14:11:07.467"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.466" endtime="20221213 14:11:07.467"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.467" endtime="20221213 14:11:07.468"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.467" endtime="20221213 14:11:07.468"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-classification|URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.468" endtime="20221213 14:11:07.469"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.468" endtime="20221213 14:11:07.469"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.469" endtime="20221213 14:11:07.469"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.469" endtime="20221213 14:11:07.469"/>
</iter>
<iter>
<var name="${cols}">['Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.470" endtime="20221213 14:11:07.470"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.470" endtime="20221213 14:11:07.470"/>
</iter>
<iter>
<var name="${cols}">['Origin|observation|boefje_normalizer_x|Hostname|internet|example.com']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.470" endtime="20221213 14:11:07.471"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.470" endtime="20221213 14:11:07.471"/>
</iter>
<iter>
<var name="${cols}">['ResolvedHostname|internet|example.com|internet|1.1.1.1']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.471" endtime="20221213 14:11:07.472"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.471" endtime="20221213 14:11:07.472"/>
</iter>
<iter>
<var name="${cols}">['URL|internet|http://example.com/']</var>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.472" endtime="20221213 14:11:07.473"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.472" endtime="20221213 14:11:07.473"/>
</iter>
<status status="PASS" starttime="20221213 14:11:07.447" endtime="20221213 14:11:07.473"/>
</for>
<return>
<value>${ids}</value>
<status status="PASS" starttime="20221213 14:11:07.473" endtime="20221213 14:11:07.473"/>
</return>
<msg timestamp="20221213 14:11:07.473" level="INFO">${ids} = ['HostnameHTTPURL|http|internet|example.com|80|/', 'Hostname|internet|example.com', 'IPAddressV4|internet|1.1.1.1', 'IPPort|internet|1.1.1.1|tcp|80', 'OriginParameter|Origin|inference|dns-alias-resolv...</msg>
<status status="PASS" starttime="20221213 14:11:07.431" endtime="20221213 14:11:07.473"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${operations}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.473" level="INFO">${operations} = []</msg>
<status status="PASS" starttime="20221213 14:11:07.473" endtime="20221213 14:11:07.473"/>
</kw>
<for flavor="IN">
<var>${id}</var>
<value>@{ids}</value>
<iter>
<var name="${id}">HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.474" level="INFO">${operation} = ['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.474" endtime="20221213 14:11:07.474"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.474" endtime="20221213 14:11:07.474"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.473" endtime="20221213 14:11:07.474"/>
</iter>
<iter>
<var name="${id}">Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.475" level="INFO">${operation} = ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.474" endtime="20221213 14:11:07.475"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.475" endtime="20221213 14:11:07.475"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.474" endtime="20221213 14:11:07.475"/>
</iter>
<iter>
<var name="${id}">IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.475" level="INFO">${operation} = ['evict', 'IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.475" endtime="20221213 14:11:07.475"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.475" endtime="20221213 14:11:07.476"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.475" endtime="20221213 14:11:07.476"/>
</iter>
<iter>
<var name="${id}">IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.476" level="INFO">${operation} = ['evict', 'IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.476" endtime="20221213 14:11:07.476"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.476" endtime="20221213 14:11:07.476"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.476" endtime="20221213 14:11:07.476"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.477" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.477" endtime="20221213 14:11:07.477"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.477" endtime="20221213 14:11:07.477"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.476" endtime="20221213 14:11:07.477"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.477" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.477" endtime="20221213 14:11:07.477"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.478" endtime="20221213 14:11:07.478"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.477" endtime="20221213 14:11:07.478"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.478" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.478" endtime="20221213 14:11:07.478"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.478" endtime="20221213 14:11:07.478"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.478" endtime="20221213 14:11:07.479"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.479" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.479" endtime="20221213 14:11:07.479"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.479" endtime="20221213 14:11:07.479"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.479" endtime="20221213 14:11:07.479"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.480" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.479" endtime="20221213 14:11:07.480"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.480" endtime="20221213 14:11:07.480"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.479" endtime="20221213 14:11:07.480"/>
</iter>
<iter>
<var name="${id}">OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.480" level="INFO">${operation} = ['evict', 'OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.480" endtime="20221213 14:11:07.480"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.480" endtime="20221213 14:11:07.481"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.480" endtime="20221213 14:11:07.481"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-alias-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.481" level="INFO">${operation} = ['evict', 'Origin|inference|dns-alias-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.481" endtime="20221213 14:11:07.481"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.481" endtime="20221213 14:11:07.481"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.481" endtime="20221213 14:11:07.481"/>
</iter>
<iter>
<var name="${id}">Origin|inference|dns-resolving|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.482" level="INFO">${operation} = ['evict', 'Origin|inference|dns-resolving|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.481" endtime="20221213 14:11:07.482"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.482" endtime="20221213 14:11:07.482"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.481" endtime="20221213 14:11:07.482"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.482" level="INFO">${operation} = ['evict', 'Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.482" endtime="20221213 14:11:07.482"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.482" endtime="20221213 14:11:07.483"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.482" endtime="20221213 14:11:07.483"/>
</iter>
<iter>
<var name="${id}">Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.483" level="INFO">${operation} = ['evict', 'Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.483" endtime="20221213 14:11:07.483"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.483" endtime="20221213 14:11:07.483"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.483" endtime="20221213 14:11:07.483"/>
</iter>
<iter>
<var name="${id}">Origin|inference|internet-nl|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.484" level="INFO">${operation} = ['evict', 'Origin|inference|internet-nl|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.483" endtime="20221213 14:11:07.484"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.484" endtime="20221213 14:11:07.484"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.483" endtime="20221213 14:11:07.484"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.484" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.484" endtime="20221213 14:11:07.484"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.485" endtime="20221213 14:11:07.485"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.484" endtime="20221213 14:11:07.485"/>
</iter>
<iter>
<var name="${id}">Origin|inference|ipv6-webservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.485" level="INFO">${operation} = ['evict', 'Origin|inference|ipv6-webservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.485" endtime="20221213 14:11:07.485"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.485" endtime="20221213 14:11:07.485"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.485" endtime="20221213 14:11:07.485"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.486" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.486" endtime="20221213 14:11:07.486"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.486" endtime="20221213 14:11:07.486"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.486" endtime="20221213 14:11:07.486"/>
</iter>
<iter>
<var name="${id}">Origin|inference|nxdomain-header-flag|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.487" level="INFO">${operation} = ['evict', 'Origin|inference|nxdomain-header-flag|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.486" endtime="20221213 14:11:07.487"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.487" endtime="20221213 14:11:07.487"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.486" endtime="20221213 14:11:07.487"/>
</iter>
<iter>
<var name="${id}">Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.487" level="INFO">${operation} = ['evict', 'Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.487" endtime="20221213 14:11:07.487"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.487" endtime="20221213 14:11:07.488"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.487" endtime="20221213 14:11:07.488"/>
</iter>
<iter>
<var name="${id}">Origin|inference|resource-discovery|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.488" level="INFO">${operation} = ['evict', 'Origin|inference|resource-discovery|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.488" endtime="20221213 14:11:07.488"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.488" endtime="20221213 14:11:07.488"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.488" endtime="20221213 14:11:07.488"/>
</iter>
<iter>
<var name="${id}">Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.489" level="INFO">${operation} = ['evict', 'Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.488" endtime="20221213 14:11:07.489"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.489" endtime="20221213 14:11:07.489"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.488" endtime="20221213 14:11:07.489"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-classification|URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.489" level="INFO">${operation} = ['evict', 'Origin|inference|url-classification|URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.489" endtime="20221213 14:11:07.489"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.489" endtime="20221213 14:11:07.490"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.489" endtime="20221213 14:11:07.490"/>
</iter>
<iter>
<var name="${id}">Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.490" level="INFO">${operation} = ['evict', 'Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.490" endtime="20221213 14:11:07.490"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.490" endtime="20221213 14:11:07.490"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.490" endtime="20221213 14:11:07.490"/>
</iter>
<iter>
<var name="${id}">Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.491" level="INFO">${operation} = ['evict', 'Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.491" endtime="20221213 14:11:07.491"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.491" endtime="20221213 14:11:07.491"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.490" endtime="20221213 14:11:07.491"/>
</iter>
<iter>
<var name="${id}">Origin|observation|boefje_normalizer_x|Hostname|internet|example.com</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.491" level="INFO">${operation} = ['evict', 'Origin|observation|boefje_normalizer_x|Hostname|internet|example.com', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.491" endtime="20221213 14:11:07.492"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.492" endtime="20221213 14:11:07.492"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.491" endtime="20221213 14:11:07.492"/>
</iter>
<iter>
<var name="${id}">ResolvedHostname|internet|example.com|internet|1.1.1.1</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.492" level="INFO">${operation} = ['evict', 'ResolvedHostname|internet|example.com|internet|1.1.1.1', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.492" endtime="20221213 14:11:07.492"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.492" endtime="20221213 14:11:07.492"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.492" endtime="20221213 14:11:07.492"/>
</iter>
<iter>
<var name="${id}">URL|internet|http://example.com/</var>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.493" level="INFO">${operation} = ['evict', 'URL|internet|http://example.com/', '2022-01-01T00:00:00+00:00']</msg>
<status status="PASS" starttime="20221213 14:11:07.493" endtime="20221213 14:11:07.493"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20221213 14:11:07.493" endtime="20221213 14:11:07.493"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.493" endtime="20221213 14:11:07.493"/>
</iter>
<status status="PASS" starttime="20221213 14:11:07.473" endtime="20221213 14:11:07.493"/>
</for>
<kw name="Create Dictionary" library="BuiltIn">
<var>${transaction}</var>
<arg>tx-ops=${operations}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.494" level="INFO">${transaction} = {'tx-ops': [['evict', 'HostnameHTTPURL|http|internet|example.com|80|/', '2022-01-01T00:00:00+00:00'], ['evict', 'Hostname|internet|example.com', '2022-01-01T00:00:00+00:00'], ['evict', 'IPAddressV4|in...</msg>
<status status="PASS" starttime="20221213 14:11:07.493" endtime="20221213 14:11:07.494"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.494" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:07.494" endtime="20221213 14:11:07.494"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/submit-tx</arg>
<arg>json=${transaction}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.501" level="INFO">POST Request : url=http://localhost:29002/_xtdb/submit-tx 
 path_url=/_xtdb/submit-tx 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '3247'} 
 body=b'{"tx-ops": [["evict", "HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|dns-alias-resolving|Hostname|internet|example.com|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|resource-discovery|Hostname|internet|example.com|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "OriginParameter|Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1|ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-alias-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|dns-resolving|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-availability|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|https-redirect|HostnameHTTPURL|http|internet|example.com|80|/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|internet-nl|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-on-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|ipv6-webservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|nxdomain-header-flag|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|port-classification|IPPort|internet|1.1.1.1|tcp|80", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|resource-discovery|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|two-ipv6-nameservers|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-classification|URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|url-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|inference|website-discovery|IPAddressV4|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "Origin|observation|boefje_normalizer_x|Hostname|internet|example.com", "2022-01-01T00:00:00+00:00"], ["evict", "ResolvedHostname|internet|example.com|internet|1.1.1.1", "2022-01-01T00:00:00+00:00"], ["evict", "URL|internet|http://example.com/", "2022-01-01T00:00:00+00:00"]]}' 
 </msg>
<msg timestamp="20221213 14:11:07.502" level="INFO">POST Response : url=http://localhost:29002/_xtdb/submit-tx 
 status=202, reason=Accepted 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '44', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={"txId":119,"txTime":"2022-12-13T13:11:07Z"} 
 </msg>
<msg timestamp="20221213 14:11:07.502" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.494" endtime="20221213 14:11:07.502"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.517" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.517" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:07.510-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:07.517" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.503" endtime="20221213 14:11:07.517"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.502" endtime="20221213 14:11:07.518"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.431" endtime="20221213 14:11:07.518"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.523" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.523" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:07.510-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:07.523" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.518" endtime="20221213 14:11:07.523"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.518" endtime="20221213 14:11:07.523"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>octopoes</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.524" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:07.524" endtime="20221213 14:11:07.525"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.533" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 path_url=/api/queues/kat/octopoes/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:07.533" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:07 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:07.533" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.525" endtime="20221213 14:11:07.533"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:07.533" endtime="20221213 14:11:07.533"/>
</return>
<status status="PASS" starttime="20221213 14:11:07.524" endtime="20221213 14:11:07.534"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.535" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:07.534" endtime="20221213 14:11:07.535"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.544" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:07.545" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:07 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:07.545" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.535" endtime="20221213 14:11:07.545"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:07.545" endtime="20221213 14:11:07.545"/>
</return>
<status status="PASS" starttime="20221213 14:11:07.534" endtime="20221213 14:11:07.545"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.546" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:07.546" endtime="20221213 14:11:07.546"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.562" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:07.562" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:07 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:07.562" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.546" endtime="20221213 14:11:07.562"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:07.562" endtime="20221213 14:11:07.562"/>
</return>
<status status="PASS" starttime="20221213 14:11:07.546" endtime="20221213 14:11:07.563"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.431" endtime="20221213 14:11:07.563"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.564" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:07.564" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:07.564" endtime="20221213 14:11:07.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.564" endtime="20221213 14:11:07.565"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.564" endtime="20221213 14:11:07.565"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.563" endtime="20221213 14:11:07.565"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.566" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:07.566" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:07.566" endtime="20221213 14:11:07.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.567" endtime="20221213 14:11:07.567"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.566" endtime="20221213 14:11:07.567"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.566" endtime="20221213 14:11:07.567"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.568" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:07.568" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:07.568" endtime="20221213 14:11:07.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.568" endtime="20221213 14:11:07.568"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.567" endtime="20221213 14:11:07.568"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.567" endtime="20221213 14:11:07.568"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.563" endtime="20221213 14:11:07.568"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.573" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.573" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:07.510-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:07.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.569" endtime="20221213 14:11:07.574"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.568" endtime="20221213 14:11:07.574"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.563" endtime="20221213 14:11:07.574"/>
</kw>
<kw name="Stop Monitoring" library="CeleryMonitor">
<status status="PASS" starttime="20221213 14:11:07.574" endtime="20221213 14:11:07.574"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.431" endtime="20221213 14:11:07.574"/>
</kw>
<status status="PASS" starttime="20221213 14:11:06.465" endtime="20221213 14:11:07.574"/>
</test>
<status status="PASS" starttime="20221213 14:11:05.549" endtime="20221213 14:11:07.575"/>
</suite>
<suite id="s1-s3" name="03 Deletion Propagation" source="/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/robot/03_deletion_propagation.robot">
<test id="s1-s3-t1" name="Propagate Deletion" line="9">
<kw name="Setup Test" type="SETUP">
<kw name="Start Monitoring" library="CeleryMonitor">
<arg>${QUEUE_URI}</arg>
<msg timestamp="20221213 14:11:07.580" level="INFO">Started monitoring</msg>
<status status="PASS" starttime="20221213 14:11:07.580" endtime="20221213 14:11:07.580"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.579" endtime="20221213 14:11:07.580"/>
</kw>
<kw name="Insert Empty Normalizer Output" library="robot">
<kw name="Insert Origin" library="robot">
<arg>tests/fixtures/normalizer_output_empty.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${norm_output_json}</var>
<arg>${origin_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20221213 14:11:07.581" level="INFO" html="true">Getting file '&lt;a href="file:///Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output_empty.json"&gt;/Users/jesse/Documents/Development/VWS/nl-rt-tim-abang/nl-rt-tim-abang-octopoes/tests/fixtures/normalizer_output_empty.json&lt;/a&gt;'.</msg>
<msg timestamp="20221213 14:11:07.582" level="INFO">${norm_output_json} = {
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [],
  "valid_time": "2019-01-01T00:00:00+00:00",
  "task_id": "1234"
}</msg>
<status status="PASS" starttime="20221213 14:11:07.581" endtime="20221213 14:11:07.582"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${OCTOPOES_URI}/observations</arg>
<arg>${norm_output_json}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.611" level="INFO">POST Request : url=http://localhost:29000/_dev/observations 
 path_url=/_dev/observations 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '164'} 
 body={
  "method": "boefje_normalizer_x",
  "source": "Hostname|internet|example.com",
  "result": [],
  "valid_time": "2019-01-01T00:00:00+00:00",
  "task_id": "1234"
} 
 </msg>
<msg timestamp="20221213 14:11:07.611" level="INFO">POST Response : url=http://localhost:29000/_dev/observations 
 status=200, reason=OK 
 headers={'date': 'Tue, 13 Dec 2022 13:11:07 GMT', 'server': 'uvicorn', 'content-length': '4', 'content-type': 'application/json'} 
 body=null 
 </msg>
<msg timestamp="20221213 14:11:07.612" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.582" endtime="20221213 14:11:07.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.612" endtime="20221213 14:11:07.612"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.581" endtime="20221213 14:11:07.613"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.581" endtime="20221213 14:11:07.613"/>
</kw>
<kw name="Await Sync" library="robot">
<kw name="Await Tasks Done" library="robot">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>SENT</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>SENT</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.614" level="INFO">Counting tasks of type task-sent: 0</msg>
<msg timestamp="20221213 14:11:07.614" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:07.614" endtime="20221213 14:11:07.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.614" endtime="20221213 14:11:07.615"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.614" endtime="20221213 14:11:07.615"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.613" endtime="20221213 14:11:07.615"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>RECEIVED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>RECEIVED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.616" level="INFO">Counting tasks of type task-received: 0</msg>
<msg timestamp="20221213 14:11:07.616" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:07.615" endtime="20221213 14:11:07.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.616" endtime="20221213 14:11:07.616"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.615" endtime="20221213 14:11:07.616"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.615" endtime="20221213 14:11:07.616"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1 min</arg>
<arg>100ms</arg>
<arg>Task Type Empty</arg>
<arg>STARTED</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Task Type Empty" library="robot">
<arg>STARTED</arg>
<kw name="Count Tasks" library="CeleryMonitor">
<var>${count}</var>
<arg>${task_type}</arg>
<msg timestamp="20221213 14:11:07.617" level="INFO">Counting tasks of type task-started: 0</msg>
<msg timestamp="20221213 14:11:07.617" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20221213 14:11:07.617" endtime="20221213 14:11:07.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20221213 14:11:07.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.617" endtime="20221213 14:11:07.618"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.617" endtime="20221213 14:11:07.618"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.617" endtime="20221213 14:11:07.618"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.613" endtime="20221213 14:11:07.618"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.624" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.624" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:07.510-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:07.624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.618" endtime="20221213 14:11:07.624"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.618" endtime="20221213 14:11:07.624"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.613" endtime="20221213 14:11:07.624"/>
</kw>
<kw name="Teardown Test" type="TEARDOWN">
<kw name="Stop Monitoring" library="CeleryMonitor">
<status status="PASS" starttime="20221213 14:11:07.625" endtime="20221213 14:11:07.625"/>
</kw>
<kw name="Cleanup" library="robot">
<kw name="Clear XTDB" library="robot">
<kw name="Get All Document Ids" library="robot">
<var>${ids}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${query}</var>
<arg>{:query {:find [?e] :where [[?e :xt/id]]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:07.626" level="INFO">${query} = {:query {:find [?e] :where [[?e :xt/id]]}}</msg>
<status status="PASS" starttime="20221213 14:11:07.626" endtime="20221213 14:11:07.626"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/edn</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.626" level="INFO">${headers} = {'Content-Type': 'application/edn', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:07.626" endtime="20221213 14:11:07.626"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/query</arg>
<arg>data=${query}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.636" level="INFO">POST Request : url=http://localhost:29002/_xtdb/query 
 path_url=/_xtdb/query 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/edn', 'Content-Length': '42'} 
 body={:query {:find [?e] :where [[?e :xt/id]]}} 
 </msg>
<msg timestamp="20221213 14:11:07.636" level="INFO">POST Response : url=http://localhost:29002/_xtdb/query 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '2', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:07.636" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.627" endtime="20221213 14:11:07.636"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rows}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20221213 14:11:07.637" level="INFO">${rows} = []</msg>
<status status="PASS" starttime="20221213 14:11:07.636" endtime="20221213 14:11:07.637"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${ids}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.638" level="INFO">${ids} = []</msg>
<status status="PASS" starttime="20221213 14:11:07.637" endtime="20221213 14:11:07.638"/>
</kw>
<for flavor="IN">
<var>${cols}</var>
<value>@{rows}</value>
<iter>
<var name="${cols}"/>
<kw name="Append To List" library="Collections">
<arg>${ids}</arg>
<arg>${cols[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:07.638" endtime="20221213 14:11:07.638"/>
</kw>
<status status="NOT RUN" starttime="20221213 14:11:07.638" endtime="20221213 14:11:07.638"/>
</iter>
<status status="NOT RUN" starttime="20221213 14:11:07.638" endtime="20221213 14:11:07.638"/>
</for>
<return>
<value>${ids}</value>
<status status="PASS" starttime="20221213 14:11:07.638" endtime="20221213 14:11:07.638"/>
</return>
<msg timestamp="20221213 14:11:07.638" level="INFO">${ids} = []</msg>
<status status="PASS" starttime="20221213 14:11:07.626" endtime="20221213 14:11:07.638"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${operations}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20221213 14:11:07.639" level="INFO">${operations} = []</msg>
<status status="PASS" starttime="20221213 14:11:07.638" endtime="20221213 14:11:07.639"/>
</kw>
<for flavor="IN">
<var>${id}</var>
<value>@{ids}</value>
<iter>
<var name="${id}"/>
<kw name="Create List" library="BuiltIn">
<var>${operation}</var>
<arg>evict</arg>
<arg>${id}</arg>
<arg>${VALID_TIME}</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20221213 14:11:07.639" endtime="20221213 14:11:07.639"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${operations}</arg>
<arg>${operation}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20221213 14:11:07.639" endtime="20221213 14:11:07.639"/>
</kw>
<status status="NOT RUN" starttime="20221213 14:11:07.639" endtime="20221213 14:11:07.639"/>
</iter>
<status status="NOT RUN" starttime="20221213 14:11:07.639" endtime="20221213 14:11:07.639"/>
</for>
<kw name="Create Dictionary" library="BuiltIn">
<var>${transaction}</var>
<arg>tx-ops=${operations}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.640" level="INFO">${transaction} = {'tx-ops': []}</msg>
<status status="PASS" starttime="20221213 14:11:07.639" endtime="20221213 14:11:07.640"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.640" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20221213 14:11:07.640" endtime="20221213 14:11:07.640"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/submit-tx</arg>
<arg>json=${transaction}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.652" level="INFO">POST Request : url=http://localhost:29002/_xtdb/submit-tx 
 path_url=/_xtdb/submit-tx 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '14'} 
 body=b'{"tx-ops": []}' 
 </msg>
<msg timestamp="20221213 14:11:07.652" level="INFO">POST Response : url=http://localhost:29002/_xtdb/submit-tx 
 status=202, reason=Accepted 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/json;charset=utf-8', 'Content-Length': '44', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={"txId":120,"txTime":"2022-12-13T13:11:07Z"} 
 </msg>
<msg timestamp="20221213 14:11:07.652" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.641" endtime="20221213 14:11:07.652"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.658" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.658" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:07.661-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:07.658" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.653" endtime="20221213 14:11:07.658"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.652" endtime="20221213 14:11:07.658"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.625" endtime="20221213 14:11:07.659"/>
</kw>
<kw name="Wait For XTDB Synced" library="robot">
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${XTDB_URI}/sync</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20221213 14:11:07.664" level="INFO">GET Request : url=http://localhost:29002/_xtdb/sync 
 path_url=/_xtdb/sync 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20221213 14:11:07.664" level="INFO">GET Response : url=http://localhost:29002/_xtdb/sync 
 status=200, reason=OK 
 headers={'Last-Modified': 'Tue, 13 Dec 2022 13:11:07 GMT', 'Content-Type': 'application/edn; charset=utf-8', 'Content-Length': '57', 'Server': 'Jetty(9.4.43.v20210629)'} 
 body={:xtdb.api/tx-time #inst "2022-12-13T13:11:07.661-00:00"} 
 </msg>
<msg timestamp="20221213 14:11:07.664" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.659" endtime="20221213 14:11:07.664"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.659" endtime="20221213 14:11:07.664"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>octopoes</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.665" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:07.665" endtime="20221213 14:11:07.665"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.674" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 path_url=/api/queues/kat/octopoes/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:07.674" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/octopoes/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:07 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:07.674" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.665" endtime="20221213 14:11:07.675"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:07.675" endtime="20221213 14:11:07.675"/>
</return>
<status status="PASS" starttime="20221213 14:11:07.664" endtime="20221213 14:11:07.675"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_INCREMENT_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.676" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:07.676" endtime="20221213 14:11:07.676"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.685" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 path_url=/api/queues/kat/_dev__scan_profile_increments/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:07.685" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_increments/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:07 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:07.686" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.676" endtime="20221213 14:11:07.686"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:07.686" endtime="20221213 14:11:07.686"/>
</return>
<status status="PASS" starttime="20221213 14:11:07.675" endtime="20221213 14:11:07.686"/>
</kw>
<kw name="Get Messages From Queue" library="robot">
<arg>${SCAN_PROFILE_MUTATION_QUEUE}</arg>
<arg>ack_requeue_false</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{data}</var>
<arg>count=10000</arg>
<arg>ackmode=${ackmode}</arg>
<arg>encoding=auto</arg>
<arg>truncate=50000</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20221213 14:11:07.687" level="INFO">&amp;{data} = { count=10000 | ackmode=ack_requeue_false | encoding=auto | truncate=50000 }</msg>
<status status="PASS" starttime="20221213 14:11:07.687" endtime="20221213 14:11:07.687"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${RABBIT_MQ_API_URI}/queues/kat/${queue}/get</arg>
<arg>json=${data}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20221213 14:11:07.695" level="INFO">POST Request : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 path_url=/api/queues/kat/_dev__scan_profile_mutations/get 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json', 'Authorization': 'Basic Y2lfdXNlcjpjaV9wYXNz'} 
 body=b'{"count": "10000", "ackmode": "ack_requeue_false", "encoding": "auto", "truncate": "50000"}' 
 </msg>
<msg timestamp="20221213 14:11:07.695" level="INFO">POST Response : url=http://ci_user:ci_pass@localhost:29003/api/queues/kat/_dev__scan_profile_mutations/get 
 status=200, reason=OK 
 headers={'cache-control': 'no-cache', 'content-length': '2', 'content-security-policy': "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'", 'content-type': 'application/json', 'date': 'Tue, 13 Dec 2022 13:11:07 GMT', 'server': 'Cowboy', 'vary': 'accept, accept-encoding, origin'} 
 body=[] 
 </msg>
<msg timestamp="20221213 14:11:07.695" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20221213 14:11:07.687" endtime="20221213 14:11:07.695"/>
</kw>
<return>
<value>${response.json()}</value>
<status status="PASS" starttime="20221213 14:11:07.695" endtime="20221213 14:11:07.695"/>
</return>
<status status="PASS" starttime="20221213 14:11:07.687" endtime="20221213 14:11:07.696"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.625" endtime="20221213 14:11:07.696"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.625" endtime="20221213 14:11:07.696"/>
</kw>
<status status="PASS" starttime="20221213 14:11:07.579" endtime="20221213 14:11:07.696"/>
</test>
<status status="PASS" starttime="20221213 14:11:07.575" endtime="20221213 14:11:07.697"/>
</suite>
<status status="FAIL" starttime="20221213 14:11:00.512" endtime="20221213 14:11:07.697"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="Robot">Robot</stat>
<stat pass="2" fail="1" skip="0" id="s1-s1" name="01 Scan Profiles">Robot.01 Scan Profiles</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="02 List Objects">Robot.02 List Objects</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="03 Deletion Propagation">Robot.03 Deletion Propagation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
